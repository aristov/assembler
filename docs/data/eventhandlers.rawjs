({ fieldset, legend, section, button, label, input, style }) => {

    /* button, that changes it's text content on focus */

    // this text is used as initial button text
    const textContent = 'Give me a focus, please...';

    // create, set text content and event handlers:
    // onfocus - to change text inside the button
    // onblur - to set inital text back
    const focusbutton = button({
        onfocus : ({ target }) => target.textContent = 'Focused!',
        onblur : ({ target }) => target.textContent = textContent,
        textContent
    });

    // this button shows a system alert
    // onclick hanlder shows an alert with message
    // that contains certain event info
    const alertbutton = button({
        onclick : ({
            type,
            target : { tagName },
            constructor : { name }
        }) => {
            alert([tagName, type, name, 'handler!'].join(' '))
        },
        // set button's style and text
        style : { marginRight: '10px' },
        children : 'Show me an alert, please...'
    });

    // use this checkbox if you don't like alerts =)
    // it sets the onchange event handler to disable the alertbutton
    const noalertbox = label([
        input({
            type : 'checkbox',
            onchange : ({ target }) => {
                alertbutton.disabled = target.checked;
            },
        }),
        ' no alerts!' // text label for input
    ]);

    // this textbox shows char count in secondary readonly box
    // it has a placeholder, inline style and oninput event handler
    // to count chars, entered to the input
    const charcountbox = label([
        input({ // create node
            placeholder : 'Count my chars, please...',
            oninput : ({ target }) => {
                // simply calculate the input value length
                charcountbox.lastChild.value = target.value.length;
            },
            style : { width : '200px', marginRight: '10px' }
        }),
        // secondary readonly input to show char count
        // set it's style initial and properties
        input({ // create node
            readOnly : true,
            title : 'Entered char count',
            value : '0',
            style : { width : '20px', textAlign : 'center' }
        })
    ]);

    // create a fieldset to display all the examples together
    return fieldset([
        legend('Event handlers'),
        section(focusbutton),
        section([alertbutton, noalertbox]),
        section(charcountbox),
        style('section { margin: 20px 0 }')
    ]);
}
