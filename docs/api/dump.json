[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/domassembler.js",
    "memberof": null,
    "longname": "lib/domassembler.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { NodeInit } from './nodeinit';\n\nconst { isArray } = Array;\nconst { document, Element } = window;\n\n/**\n * XML namespace\n * - provides `Element` DOM interface\n * - https://www.w3.org/1999/xml\n * @namespace\n */\nexport const XML_NS_URI = 'https://www.w3.org/1999/xml';\n\n/**\n * - Assembler for DOM `Element`\n * - `Document.createElementNS` functionality wrapper\n * - Provides built-in and adapted interfaces for `Element` initialization\n */\nexport class DOMAssembler {\n    /**\n     * Assign given element to assembler instance\n     * @param {Element} element node to assign\n     */\n    set element(element) {\n        if(element instanceof Element) {\n            /**\n             * Node, currently assigned to the assembler instance\n             * @type {Element}\n             */\n            this.node = element;\n        } else throw Error('This is not Element');\n    }\n\n    /**\n     * Get the assigned element\n     * @return {Element} assigned node\n     */\n    get element() {\n        if(this.node) return this.node;\n        else throw Error('No element assigned');\n    }\n\n    /**\n     * todo thinkme: define as method? if(init) this.init(NodeInit(init), ...initlist);\n     * Initialize the element with defined properties\n     * @param {{}} init initializing dictionary object\n     */\n    set init(init) {\n        const element = this.element;\n        for(let prop in init) {\n            const value = init[prop];\n            if(value !== undefined) {\n                if(prop in this) this[prop] = value;\n                else if(prop in element) element[prop] = value;\n            }\n        }\n    }\n\n    /**\n     * Set attributes on the element\n     * @param {{}} attrset dictionary object\n     */\n    set attrset(attrset) {\n        const element = this.element;\n        for(let name in attrset) {\n            const value = attrset[name];\n            if(typeof value === 'string') {\n                element.setAttribute(name, value);\n            }\n        }\n    }\n\n    /**\n     * Append children to the element\n     * - Supports arrays and nested arrays, single DOM nodes and strings as `Text` nodes\n     * @param {Node|String|DOMAssembler|Array} [children] child node or string or assembler instance or array of listed\n     */\n    set children(children) {\n        if(isArray(children)) {\n            children.forEach(child => this.children = child);\n        } else if(children) {\n            const child = typeof children === 'string'?\n                document.createTextNode(children) :\n                children instanceof DOMAssembler? // todo add spec\n                    children.element :\n                    children;\n            this.element.appendChild(child);\n        }\n    }\n\n    /**\n     * Create the specified element and initialize it by a given property set\n     * @param {String} tagName\n     * @param {{}|String|Node|DOMAssembler|Array} [init]\n     * @returns {Element} created and initialized DOM `Element`\n     */\n    createElement(tagName, init) {\n        const { namespaceURI } = this.constructor;\n        this.element = document.createElementNS(namespaceURI, tagName);\n        if(init) this.init = NodeInit(init);\n        return this.element;\n    }\n\n    /**\n     * Create elements in XML namespace\n     * @return {String}\n     */\n    static get namespaceURI() {\n        return XML_NS_URI;\n    }\n}\n\nObject.defineProperty(DOMAssembler.prototype, 'node', { writable : true, value : null });\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isArray",
    "memberof": "lib/domassembler.js",
    "longname": "lib/domassembler.js~isArray",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/domassembler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "document",
    "memberof": "lib/domassembler.js",
    "longname": "lib/domassembler.js~document",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/domassembler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XML_NS_URI",
    "memberof": "lib/domassembler.js",
    "longname": "lib/domassembler.js~XML_NS_URI",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/domassembler.js",
    "importStyle": "{XML_NS_URI}",
    "description": "XML namespace\n- provides `Element` DOM interface\n- https://www.w3.org/1999/xml",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DOMAssembler",
    "memberof": "lib/domassembler.js",
    "longname": "lib/domassembler.js~DOMAssembler",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/domassembler.js",
    "importStyle": "{DOMAssembler}",
    "description": "- Assembler for DOM `Element`\n- `Document.createElementNS` functionality wrapper\n- Provides built-in and adapted interfaces for `Element` initialization",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 5,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#element",
    "access": null,
    "description": "Assign given element to assembler instance",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "node to assign"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "node",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#node",
    "access": null,
    "description": "Node, currently assigned to the assembler instance",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 7,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#element",
    "access": null,
    "description": "Get the assigned element",
    "lineNumber": 38,
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "assigned node"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#init",
    "access": null,
    "description": "todo thinkme: define as method? if(init) this.init(NodeInit(init), ...initlist);\nInitialize the element with defined properties",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "init",
        "description": "initializing dictionary object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 9,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "attrset",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#attrset",
    "access": null,
    "description": "Set attributes on the element",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "attrset",
        "description": "dictionary object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "children",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#children",
    "access": null,
    "description": "Append children to the element\n- Supports arrays and nested arrays, single DOM nodes and strings as `Text` nodes",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "String",
          "DOMAssembler",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "children",
        "description": "child node or string or assembler instance or array of listed"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createElement",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#createElement",
    "access": null,
    "description": "Create the specified element and initialize it by a given property set",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} created and initialized DOM `Element`"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}|String|Node|DOMAssembler|Array"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "created and initialized DOM `Element`"
    },
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#element",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler#init",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "namespaceURI",
    "memberof": "lib/domassembler.js~DOMAssembler",
    "longname": "lib/domassembler.js~DOMAssembler.namespaceURI",
    "access": null,
    "description": "Create elements in XML namespace",
    "lineNumber": 108,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/domassembler.spec.js",
    "memberof": null,
    "longname": "lib/domassembler.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { DOMAssembler, XML_NS_URI } from './domassembler';\nimport chai from 'chai';\n\nconst { assert } = chai;\nconst {\n    document,\n    Text,\n    Comment,\n    Element,\n    HTMLHRElement\n} = window;\n\nconst assembler = new DOMAssembler;\n\ndescribe('DOM assembler', function() {\n\n    describe('createElement', function() {\n\n        describe('general', function() {\n            const element = assembler.createElement('element');\n\n            it('Element created', () => {\n                assert.equal(element.constructor, Element);\n            });\n            it('proper tagName', () => {\n                assert.equal(element.tagName, 'element')\n            });\n            it('proper namespace URI', () => {\n                assert.equal(element.namespaceURI, XML_NS_URI)\n            });\n            it('has no attributes and no child nodes', () => {\n                assert(!element.hasAttributes());\n                assert(!element.hasChildNodes());\n            });\n        });\n\n        describe('build-in attributes', function() {\n\n            describe('id', function() {\n                const id = 'element_0';\n                const element = assembler.createElement('element', { id });\n\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes(), 'element has attributes');\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `id` attribute', function() {\n                    assert.equal(element.id, id);\n                });\n                it('document finds it', function() {\n                    document.body.appendChild(element);\n                    assert.equal(document.getElementById(id), element);\n                    document.body.removeChild(element);\n                });\n            });\n\n            describe('className', function() {\n                const className = 'foo bar wiz';\n                const element = assembler.createElement('element', { className });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes(), 'element has attributes');\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `className` attribute', function() {\n                    assert.equal(element.className, className);\n                    assert.equal(element.getAttribute('class'), className);\n                });\n                it('classList interface works properly', function() {\n                    assert(element.classList.contains('foo'), 'contains class `foo`');\n                    assert(element.classList.contains('bar'), 'contains class `bar`');\n                    assert(element.classList.contains('wiz'), 'contains class `wiz`');\n                });\n                it('document finds it', function() {\n                    document.body.appendChild(element);\n                    assert.equal(document.getElementsByClassName('foo')[0], element);\n                    assert.equal(document.getElementsByClassName('bar')[0], element);\n                    assert.equal(document.getElementsByClassName('wiz')[0], element);\n                    document.body.removeChild(element);\n                });\n            });\n\n            describe('textContent', function() {\n                const element = assembler.createElement('element', {\n                    textContent : 'element textContent'\n                });\n                it('proper number of child nodes', function() {\n                    assert(element.hasChildNodes(), 'element has child nodes');\n                    assert.equal(element.childNodes.length, 1);\n                });\n                it('proper children', function() {\n                    assert.equal(element.firstChild.constructor, Text);\n                    assert.equal(element.firstChild.textContent, 'element textContent');\n                    assert.equal(element.textContent, 'element textContent');\n                });\n            });\n        });\n\n        describe('adapted interface', function() {\n\n            describe('attrset', function() {\n                const element = assembler.createElement('element', {\n                    attrset : { attrname : 'attribute value' }\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes(), 'element has attributes');\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper attributes assigned', function() {\n                    assert.equal(element.getAttribute('attrname'), 'attribute value');\n                });\n            });\n\n            describe('children', function() {\n                const element = assembler.createElement('element', {\n                    children : [\n                        0,\n                        assembler.createElement('child'),\n                        '',\n                        'text node as string',\n                        NaN,\n                        document.createTextNode('created text node'),\n                        null,\n                        document.createElement('hr'),\n                        false,\n                        document.createComment('Simple DOM Comment node'),\n                        undefined\n                    ]\n                });\n                const childNodes = element.childNodes;\n                it('proper number of child nodes', function() {\n                    assert(element.hasChildNodes(), 'element has child nodes');\n                    assert.equal(childNodes.length, 5);\n                });\n                it('Proper child nodes', function() {\n                    assert.equal(childNodes[0].constructor, Element);\n                    assert.equal(childNodes[0].tagName, 'child');\n                    assert.equal(childNodes[1].constructor, Text);\n                    assert.equal(childNodes[1].textContent, 'text node as string');\n                    assert.equal(childNodes[2].constructor, Text);\n                    assert.equal(childNodes[2].nodeValue, 'created text node');\n                    assert.equal(childNodes[3].constructor, HTMLHRElement);\n                    assert.equal(childNodes[3].tagName, 'HR');\n                    assert.equal(childNodes[4].constructor, Comment);\n                    assert.equal(childNodes[4].textContent, 'Simple DOM Comment node');\n                });\n            });\n        });\n    });\n});\n"
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/domassembler.spec.js",
    "longname": "lib/domassembler.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/domassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "document",
    "memberof": "lib/domassembler.spec.js",
    "longname": "lib/domassembler.spec.js~document",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/domassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assembler",
    "memberof": "lib/domassembler.spec.js",
    "longname": "lib/domassembler.spec.js~assembler",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/domassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "lib/domassembler.js~DOMAssembler"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/htmlassembler.js",
    "memberof": null,
    "longname": "lib/htmlassembler.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { DOMAssembler } from './domassembler';\n\nconst { assign } = Object;\n\n/**\n * XHTML namespace\n * - provides all inherited from `HTMLElement` DOM interfaces\n * - https://www.w3.org/1999/xhtml\n * @namespace\n */\nexport const XHTML_NS_URI = 'http://www.w3.org/1999/xhtml';\n\n/**\n * - Assembler for DOM `HTMLElement`\n * - `Document.createElement` functionality wrapper\n * - Provides built-in and adapted interfaces for `HTMLElement` initialization\n */\nexport class HTMLAssembler extends DOMAssembler {\n    /**\n     * Assign custom `data-` attributes to the element\n     * @param {{}} dataset declaration dictionary object\n     */\n    set dataset(dataset) {\n        assign(this.element.dataset, dataset);\n    }\n\n    /**\n     * Assign CSS style declaration to the element\n     * @param {CSSStyleDeclaration} style declaration dictionary object\n     */\n    set style(style) {\n        assign(this.element.style, style);\n    }\n\n    /**\n     * Create elements in XHTML namespace\n     * @return {String}\n     * @override\n     */\n    static get namespaceURI() {\n        return XHTML_NS_URI;\n    }\n}\n"
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assign",
    "memberof": "lib/htmlassembler.js",
    "longname": "lib/htmlassembler.js~assign",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmlassembler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XHTML_NS_URI",
    "memberof": "lib/htmlassembler.js",
    "longname": "lib/htmlassembler.js~XHTML_NS_URI",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmlassembler.js",
    "importStyle": "{XHTML_NS_URI}",
    "description": "XHTML namespace\n- provides all inherited from `HTMLElement` DOM interfaces\n- https://www.w3.org/1999/xhtml",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HTMLAssembler",
    "memberof": "lib/htmlassembler.js",
    "longname": "lib/htmlassembler.js~HTMLAssembler",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmlassembler.js",
    "importStyle": "{HTMLAssembler}",
    "description": "- Assembler for DOM `HTMLElement`\n- `Document.createElement` functionality wrapper\n- Provides built-in and adapted interfaces for `HTMLElement` initialization",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "lib/domassembler.js~DOMAssembler"
    ]
  },
  {
    "__docId__": 23,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "dataset",
    "memberof": "lib/htmlassembler.js~HTMLAssembler",
    "longname": "lib/htmlassembler.js~HTMLAssembler#dataset",
    "access": null,
    "description": "Assign custom `data-` attributes to the element",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "dataset",
        "description": "declaration dictionary object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "style",
    "memberof": "lib/htmlassembler.js~HTMLAssembler",
    "longname": "lib/htmlassembler.js~HTMLAssembler#style",
    "access": null,
    "description": "Assign CSS style declaration to the element",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "CSSStyleDeclaration"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "declaration dictionary object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "namespaceURI",
    "memberof": "lib/htmlassembler.js~HTMLAssembler",
    "longname": "lib/htmlassembler.js~HTMLAssembler.namespaceURI",
    "access": null,
    "description": "Create elements in XHTML namespace",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/htmlassembler.spec.js",
    "memberof": null,
    "longname": "lib/htmlassembler.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { HTMLAssembler } from './htmlassembler.js';\nimport chai from 'chai';\n\n// fixme\nimport { htmlequal } from '../util/util.domequalmarkup';\n\nconst { assert } = chai;\nconst {\n    HTMLElement,\n    HTMLUnknownElement,\n    HTMLInputElement,\n    HTMLHtmlElement,\n    HTMLFormElement,\n    HTMLSelectElement,\n    HTMLAnchorElement,\n    HTMLBodyElement,\n    HTMLButtonElement,\n    HTMLDivElement,\n    HTMLSpanElement\n} = window;\n\nconst assembler = new HTMLAssembler;\n\ndescribe('HTML assembler', function() {\n\n    describe('createElement', function() {\n\n        describe('built-in global attributes', function() {\n\n            describe('accessKey', function() {\n                const element = assembler.createElement('a', { accessKey : 'A' });\n\n                it('HTMLAnchorElement node created', function() {\n                    assert.equal(element.constructor, HTMLAnchorElement);\n                    assert.equal(element.tagName, 'A');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `accessKey` attribute', function() {\n                    assert.equal(element.accessKey, 'A');\n                    assert.equal(element.getAttribute('accesskey'), 'A');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML.toUpperCase(), '<A ACCESSKEY=\"A\"></A>');\n                });\n                it('hdmldiff works properly', function() {\n                    assert.equal(htmlequal(element.outerHTML.toUpperCase(), '<a accesskey=\"A\"></a>'), true);\n                });\n            });\n\n            describe('className', function() {\n                const className = 'foo bar wiz';\n                const element = assembler.createElement('div', { className });\n\n                it('HTMLDivElement node created', function() {\n                    assert.equal(element.constructor, HTMLDivElement);\n                    assert.equal(element.tagName, 'DIV');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `className` attribute', function() {\n                    assert.equal(element.className, className);\n                    assert.equal(element.getAttribute('class'), className);\n                    assert(element.classList.contains('foo'));\n                    assert(element.classList.contains('bar'));\n                    assert(element.classList.contains('wiz'));\n                });\n                it('document finds it', function() {\n                    document.body.appendChild(element);\n                    assert.equal(document.getElementsByClassName('foo')[0], element);\n                    assert.equal(document.getElementsByClassName('bar')[0], element);\n                    assert.equal(document.getElementsByClassName('wiz')[0], element);\n                    document.body.removeChild(element);\n                });\n                it('proper outerHTML property value', () => {\n                    assert.equal(element.outerHTML, '<div class=\"foo bar wiz\"></div>');\n                });\n            });\n\n            describe('contentEditable', function() {\n                const element = assembler.createElement('unknown', { contentEditable : 'true' });\n\n                it('HTMLUnknownElement node created', function() {\n                    assert.equal(element.constructor, HTMLUnknownElement);\n                    assert.equal(element.tagName, 'UNKNOWN');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `contentEditable` attribute', function() {\n                    assert.equal(element.contentEditable, 'true');\n                    assert.equal(element.getAttribute('contenteditable'), 'true');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML.toLowerCase(),\n                        '<unknown contenteditable=\"true\"></unknown>');\n                });\n            });\n\n            describe('dir', function() {\n                const element = assembler.createElement('button', { dir : 'rtl' });\n\n                it('HTMLButtonElement node created', function() {\n                    assert.equal(element.constructor, HTMLButtonElement);\n                    assert.equal(element.tagName, 'BUTTON');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `dir` attribute', function() {\n                    assert.equal(element.dir, 'rtl');\n                    assert.equal(element.getAttribute('dir'), 'rtl');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<button dir=\"rtl\"></button>');\n                });\n            });\n\n            describe('draggable', function() {\n                const element = assembler.createElement('header', { draggable : true });\n\n                it('HTMLElement node created', function() {\n                    assert.equal(element.constructor, HTMLElement);\n                    assert.equal(element.tagName, 'HEADER');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `draggable` attribute', function() {\n                    assert.equal(element.draggable, true);\n                    assert.equal(element.getAttribute('draggable'), 'true');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<header draggable=\"true\"></header>');\n                });\n            });\n\n            describe('hidden', function() {\n                const element = assembler.createElement('input', { hidden : true });\n\n                it('HTMLInputElement node created', function() {\n                    assert.equal(element.constructor, HTMLInputElement);\n                    assert.equal(element.tagName, 'INPUT');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `hidden` attribute', function() {\n                    assert.equal(element.hidden, true);\n                    assert.equal(element.getAttribute('hidden'), '');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<input hidden=\"\">');\n                });\n            });\n\n            describe('id', function() {\n                const id = 'element_0';\n                const element = assembler.createElement('span', { id });\n\n                it('HTMLSpanElement node created', function() {\n                    assert.equal(element.constructor, HTMLSpanElement);\n                    assert.equal(element.tagName, 'SPAN');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `id` attribute', function() {\n                    assert.equal(element.id, id);\n                });\n                it('document finds it', function() {\n                    document.body.appendChild(element);\n                    assert.equal(document.getElementById(id), element);\n                    document.body.removeChild(element);\n                });\n                it('proper outerHTML property value', () => {\n                    assert.equal(element.outerHTML, '<span id=\"element_0\"></span>');\n                });\n            });\n\n            describe('innerHTML', function() {\n                const element = assembler.createElement('body', {\n                    innerHTML : '<span class=\"box\"></span>'\n                });\n                it('HTMLBodyElement node created', function() {\n                    assert.equal(element.constructor, HTMLBodyElement);\n                    assert.equal(element.tagName, 'BODY');\n                });\n                it('proper number of child nodes', function() {\n                    assert(element.hasChildNodes());\n                    assert.equal(element.childNodes.length, 1);\n                });\n                it('proper child node', function() {\n                    const child = element.firstChild;\n                    assert.equal(child.constructor, HTMLSpanElement);\n                    assert.equal(child.outerHTML, '<span class=\"box\"></span>');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<body><span class=\"box\"></span></body>');\n                });\n            });\n\n            describe('lang', function() {\n                const element = assembler.createElement('html', { lang : 'ru' });\n\n                it('HTMLHtmlElement node created', function() {\n                    assert.equal(element.constructor, HTMLHtmlElement);\n                    assert.equal(element.tagName, 'HTML');\n                });\n                it('proper number of attributes and child nodes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('has proper lang attribute set', function() {\n                    assert.equal(element.lang, 'ru');\n                    assert.equal(element.getAttribute('lang'), 'ru');\n                });\n                it('proper outerHTML property value', function() {\n                    assert.equal(element.outerHTML, '<html lang=\"ru\"></html>');\n                });\n            });\n\n            describe('tabIndex', function() {\n                const element = assembler.createElement('form', { tabIndex : 0 });\n\n                it('HTMLFormElement node created', function() {\n                    assert.equal(element.constructor, HTMLFormElement);\n                    assert.equal(element.tagName, 'FORM');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `tabIndex` attribute', function() {\n                    assert.equal(element.tabIndex, 0);\n                    assert.equal(element.getAttribute('tabindex'), '0');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML.toLowerCase(), '<form tabindex=\"0\"></form>');\n                });\n            });\n\n            describe('title', function() {\n                const element = assembler.createElement('select', { title : 'Select without options' });\n\n                it('HTMLSelectElement node created', function() {\n                    assert.equal(element.constructor, HTMLSelectElement);\n                    assert.equal(element.tagName, 'SELECT');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper `title` attribute', function() {\n                    assert.equal(element.title, 'Select without options');\n                    assert.equal(element.getAttribute('title'), 'Select without options');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<select title=\"Select without options\"></select>');\n                });\n            });\n        });\n\n        describe('built-in global event handlers', function() {\n            it('onclick', () => {\n                const onclick = sinon.spy();\n                const element = assembler.createElement('button', { onclick });\n                assert(onclick.notCalled);\n                element.click();\n                assert(onclick.calledOnce);\n                element.click();\n                assert(onclick.calledTwice);\n            });\n            it('click listener', () => {\n                const listener = sinon.spy();\n                const element = assembler.createElement('button');\n                element.addEventListener('click', listener);\n                document.body.appendChild(element);\n                assert(listener.notCalled);\n                element.click();\n                assert(listener.calledOnce);\n                element.click();\n                assert(listener.calledTwice);\n                document.body.removeChild(element);\n            });\n        });\n\n        describe('adapted interface', function() {\n\n            describe('dataset', function() {\n                const element = assembler.createElement('div', {\n                    dataset : { camelCased : 'custom attribute' }\n                });\n                it('HTMLDivElement node created', function() {\n                    assert.equal(element.constructor, HTMLDivElement);\n                    assert.equal(element.tagName, 'DIV');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper custom `data-` attribute', function() {\n                    assert.equal(element.dataset.camelCased, 'custom attribute');\n                    assert.equal(element.getAttribute('data-camel-cased'), 'custom attribute');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<div data-camel-cased=\"custom attribute\"></div>');\n                });\n            });\n\n            describe('style', function() {\n                const element = assembler.createElement('span', {\n                    style : { backgroundColor : 'black' }\n                });\n                it('HTMLSpanElement node created', function() {\n                    assert.equal(element.constructor, HTMLSpanElement);\n                    assert.equal(element.tagName, 'SPAN');\n                });\n                it('proper number of attributes', function() {\n                    assert(element.hasAttributes());\n                    assert.equal(element.attributes.length, 1);\n                });\n                it('proper style declaration assigned', function() {\n                    assert.equal(element.style.backgroundColor, 'black');\n                    assert.equal(element.getAttribute('style'), 'background-color: black;');\n                });\n                it('proper `outerHTML` property value', function() {\n                    assert.equal(element.outerHTML, '<span style=\"background-color: black;\"></span>');\n                });\n            });\n        });\n    });\n});\n"
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/htmlassembler.spec.js",
    "longname": "lib/htmlassembler.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmlassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "HTMLElement",
    "memberof": "lib/htmlassembler.spec.js",
    "longname": "lib/htmlassembler.spec.js~HTMLElement",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmlassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assembler",
    "memberof": "lib/htmlassembler.spec.js",
    "longname": "lib/htmlassembler.spec.js~assembler",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmlassembler.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "lib/htmlassembler.js~HTMLAssembler"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/htmldom.js",
    "memberof": null,
    "longname": "lib/htmldom.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { HTMLAssembler } from './htmlassembler';\n\nconst assembler = new HTMLAssembler;\n\n/**\n * Assembles the specified `HTMLElement` node\n *\n * Provides `HTMLElement` interface and all HTML DOM interfaces which inherit from it\n *\n * • [w3](https://www.w3.org/TR/html/single-page.html#htmlelement-htmlelement)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)\n * • [msdn api](https://msdn.microsoft.com/en-us/library/hh869697.aspx)\n *\n * @function htmldom\n * @param {String} tagName element tag name\n * @param {{}|String|Node|DOMAssembler|Array} [init] `NodeInit` dictionary\n * @param {{}} [init.attrset] `HTMLElement` attributes set as a dictionary object\n * @param {{}} [init.dataset] `HTMLElement` dataset as a dictionary object\n * @param {{}} [init.style] `HTMLElement` style as a dictionary object (CSSStyleDeclaration)\n * @param {String|Node|DOMAssembler|Array} [init.children] `HTMLElement` child nodes\n * @param {String} [init.accessKey] Specify an access key for the element\n * @param {String} [init.className] `Element` class name; reflects \"class\" attribute\n * @param {String} [init.contentEditable] Specify whether or not the element is editable\n * @param {String} [init.dir] Specify a text writing directionality of the content of the current element\n * @param {Boolean} [init.hidden] Specify the visibility state of the element\n * @param {String} [init.id] `Element` unique identifier; reflects \"id\" content attribute\n * @param {String} [init.innerHTML] Paste markup string as an inner DOM structure\n * @param {String} [init.innerText] Paste string data as a single text node\n * @param {String} [init.lang] Specify a human-language of the element and its contents\n * @param {Number} [init.tabIndex] Specify a focusability of the element\n * @param {String} [init.textContent] Paste string data as a single text node\n * @param {String} [init.title] Specify title of the element; represents a browser title tooltip content\n * @param {Function} [init.onabort] Fired at the Window when the download was aborted by the user\n * @param {Function} [init.onblur] Fired at nodes when they stop being focused\n * @param {Function} [init.oncancel] Fired at dialog elements when they are canceled by the user (e.g. by pressing the Escape key)\n * @param {Function} [init.onchange] Fired at controls when the user commits a value change (see also the input event)\n * @param {Function} [init.onclick] Normally a mouse event; also synthetically fired at an element before its activation behavior is run, when an element is activated from a non-pointer input device (e.g. a keyboard)\n * @param {Function} [init.onclose] Fired at dialog elements when they are closed, and at WebSocket elements when the connection is terminated\n * @param {Function} [init.oncontextmenu] Fired at elements when the user requests their context menu\n * @param {Function} [init.oncuechange] One or more cues in the track have become active or stopped being active.\n * @param {Function} [init.ondblclick] Fires on double click\n * @param {Function} [init.ondurationchange] The duration attribute has just been updated.\n * @param {Function} [init.onemptied] networkState is NETWORK_EMPTY; all the IDL attributes are in their initial states.\n * @param {Function} [init.onended] currentTime equals the end of the media resource; ended is true.\n * @param {Function} [init.onerror] Fired when unexpected errors occur (e.g. networking errors, script errors, decoding errors)\n * @param {Function} [init.onfocus] Fired at nodes gaining focus\n * @param {Function} [init.oninput] Fired at controls when the user changes the value\n * @param {Function} [init.oninvalid] Fired at controls during form validation if they do not satisfy their constraints\n * @param {Function} [init.onkeydown] A user agent dispatches this event when a key is pressed down\n * @param {Function} [init.onkeypress] A user agent dispatches this event when a key is pressed down, if and only if that key normally produces a character value\n * @param {Function} [init.onkeyup] A user agent dispatches this event when a key is released\n * @param {Function} [init.onload] Fired at the Window when the document has finished loading; fired at an element containing a resource (e.g. img, embed) when its resource has finished loading\n * @param {Function} [init.onloadend] Fired at img elements after a successful load\n * @param {Function} [init.onloadstart] Fired at img elements when a load begins\n * @param {Function} [init.onmousedown] A user agent dispatches this event when a pointing device button is pressed over an element\n * @param {Function} [init.onmouseenter] A user agent dispatches this event when a pointing device is moved onto the boundaries of an element or one of its descendent elements\n * @param {Function} [init.onmouseleave] A user agent dispatches this event when a pointing device is moved off of the boundaries of an element and all of its descendent elements\n * @param {Function} [init.onmousemove] A user agent dispatches this event when a pointing device is moved while it is over an element\n * @param {Function} [init.onmouseout] A user agent dispatches this event when a pointing device is moved off of the boundaries of an element\n * @param {Function} [init.onmouseover] A user agent dispatches this event when a pointing device is moved onto the boundaries of an element\n * @param {Function} [init.onmouseup] A user agent dispatches this event when a pointing device button is released over an element\n * @param {Function} [init.onwheel] A user agent dispatches this event when a mouse wheel has been rotated around any axis, or when an equivalent input device (such as a mouse-ball, certain tablets or touchpads, etc.) has emulated such an action\n * @param {Function} [init.onpause] The element has been paused. Fired after the pause() method has returned\n * @param {Function} [init.onplay] The element is no longer paused. Fired after the play() method has returned, or when the autoplay attribute has caused playback to begin\n * @param {Function} [init.onplaying] Playback is ready to start after having been paused or delayed due to lack of media data\n * @param {Function} [init.onprogress] Fired at img elements during a CORS-same-origin image load\n * @param {Function} [init.onratechange] Either the defaultPlaybackRate or the playbackRate attribute has just been updated\n * @param {Function} [init.onreset] Fired at a form element when it is reset\n * @param {Function} [init.onresize] Fired at the Window when the viewport is resized\n * @param {Function} [init.onscroll] Fired at the Document or element when the viewport or element is scrolled, respectively\n * @param {Function} [init.onseeked] The seeking IDL attribute changed to false after the current playback position was changed\n * @param {Function} [init.onseeking] The seeking IDL attribute changed to true, and the user agent has started seeking to a new position\n * @param {Function} [init.onselect] Fired at form controls when their text selection is adjusted (whether by an API or by the user)\n * @param {Function} [init.onshow] Fired at a menu element when it is shown as a context menu\n * @param {Function} [init.onstalled] The user agent is trying to fetch media data, but data is unexpectedly not forthcoming\n * @param {Function} [init.onsubmit] Fired at a form element when it is submitted\n * @param {Function} [init.onsuspend] The user agent is intentionally not currently fetching media data\n * @param {Function} [init.ontimeupdate] The current playback position changed as part of normal playback or in an especially interesting way, for example discontinuously\n * @param {Function} [init.ontoggle] Fired at details elements when they open or close\n * @param {Function} [init.onvolumechange] Either the volume attribute or the muted attribute has changed. Fired after the relevant attribute's setter has returned\n * @param {Function} [init.onwaiting] Playback has stopped because the next frame is not available, but the user agent expects that frame to become available in due course\n */\nexport function htmldom(tagName, init) {\n    return assembler.createElement(tagName, init)\n};\n\n// * @return {HTMLElement} // fixme\n\n/**\n * [The `a` element](https://html.spec.whatwg.org/#the-a-element)\n *  - If the `a` element has an `href` attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents.\n *  - If the `a` element has no `href` attribute, then the element represents a placeholder for where a link might otherwise have been placed, if it had been relevant, consisting of just the element's contents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-a-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a)\n * • [msdn api](https://msdn.microsoft.com/en-us/library/hh869682.aspx)\n *\n * @function a\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.href] Address of the hyperlink\n * @param {String} [init.target] Browsing context for hyperlink navigation\n * @param {String} [init.download] Whether to download the resource instead of navigating to it, and its file name if so\n * @param {String} [init.ping] URLs to ping\n * @param {String} [init.rel] Relationship between the location in the document containing the hyperlink and the destination resource\n * @param {String} [init.hreflang] Language of the linked resource\n * @param {String} [init.type] Hint for the type of the referenced resource\n * @param {String} [init.referrerPolicy] Determines the referrer policy for fetches initiated by the element\n * @return {HTMLAnchorElement}\n */\nexport function a(init) { return htmldom('a', init) }\n\n/**\n * [The `abbr` element](https://html.spec.whatwg.org/#the-abbr-element)\n * represents an abbreviation or acronym, optionally with its expansion.\n * The `title` attribute may be used to provide an expansion of the abbreviation.\n * The attribute, if specified, must contain an expansion of the abbreviation, and nothing else.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-abbr-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr)\n *\n * @function abbr\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.title] Special semantics: full term or expansion of abbreviation\n * @return {HTMLElement}\n */\nexport function abbr(init) { return htmldom('abbr', init) }\n\n/**\n * [The `address` element](https://html.spec.whatwg.org/#the-address-element)\n * represents the contact information for its nearest `article` or `body` element ancestor.\n * If that is the `body` element, then the contact information applies to the document as a whole.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-address-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address)\n *\n * @function address\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function address(init) { return htmldom('address', init) }\n\n/**\n * [The `area` element](https://html.spec.whatwg.org/#the-area-element)\n * represents either a hyperlink with some text and a corresponding area on an image map,\n * or a dead area on an image map.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-area-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area)\n *\n * @function area\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.alt] Replacement text for use when images are not available\n * @param {String} [init.coords] Coordinates for the shape to be created in an image map\n * @param {String} [init.shape] The kind of shape to be created in an image map\n * @param {String} [init.href] Address of the hyperlink\n * @param {String} [init.target] Browsing context for hyperlink navigation\n * @param {String} [init.download] Whether to download the resource instead of navigating to it, and its file name if so\n * @param {String} [init.ping] URLs to ping\n * @param {String} [init.rel] Relationship between the location in the document containing the hyperlink and the destination resource\n * @return {HTMLAreaElement}\n */\nexport function area(init) { return htmldom('area', init) }\n\n/**\n * [The `article` element](https://html.spec.whatwg.org/#the-article-element)\n * represents a complete, or self-contained, composition in a document, page, application,\n * or site and that is, in principle, independently distributable or reusable, e.g. in syndication.\n * This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment,\n * an interactive widget or gadget, or any other independent item of content.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-article-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article)\n *\n * @function article\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function article(init) { return htmldom('article', init) }\n\n/**\n * [The `aside` element](https://html.spec.whatwg.org/#the-aside-element)\n * represents a section of a page that consists of content that is tangentially related to the content around the aside element,\n * and which could be considered separate from that content.\n * Such sections are often represented as sidebars in printed typography.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-aside-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside)\n *\n * @function aside\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function aside(init) { return htmldom('aside', init) }\n\n/**\n * [The `audio` element](https://html.spec.whatwg.org/#the-audio-element)\n * represents a sound or audio stream.\n * Content may be provided inside the `audio` element.\n * User agents should not show this content to the user;\n * it is intended for older Web browsers which do not support audio, so that legacy audio plugins can be tried,\n * or to show text to the users of these older browsers informing them of how to access the audio contents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-audio-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)\n *\n * @function audio\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.crossorigin] How the element handles crossorigin requests\n * @param {String} [init.preload] Hints how much buffering the media resource will likely need\n * @param {Boolean} [init.autoplay] Hint that the media resource can be started automatically when the page is loaded\n * @param {Boolean} [init.loop] Whether to loop the media resource\n * @param {Boolean} [init.muted] Whether to mute the media resource by default\n * @param {Boolean} [init.controls] Show user agent controls\n * @return {HTMLAudioElement}\n */\nexport function audio(init) { return htmldom('audio', init) }\n\n/**\n * [The `b` element](https://html.spec.whatwg.org/#the-b-element)\n * represents a span of text to which attention is being drawn\n * for utilitarian purposes without conveying any extra importance\n * and with no implication of an alternate voice or mood,\n * such as key words in a document abstract, product names in a review,\n * actionable words in interactive text-driven software, or an article lede.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-b-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b)\n *\n * @function b\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function b(init) { return htmldom('b', init) }\n\n/**\n * [The `base` element](https://html.spec.whatwg.org/#the-base-element)\n * represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-base-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base)\n *\n * @function base\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.dir] special semantics\n * @return {HTMLElement}\n */\nexport function base(init) { return htmldom('base', init) }\n\n/**\n * [The `bdi` element](https://html.spec.whatwg.org/#the-bdi-element)\n * represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-bdi-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi)\n *\n * @function bdi\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.dir] special semantics\n * @return {HTMLElement}\n */\nexport function bdi(init) { return htmldom('bdi', init) }\n\n/**\n * [The `bdo` element](https://html.spec.whatwg.org/#the-bdo-element)\n * represents explicit text directionality formatting control for its children.\n * It allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-bdo-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo)\n *\n * @function bdo\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.dir] special semantics: `rtl` or `ltr` values allowed only\n * @return {HTMLElement}\n */\nexport function bdo(init) { return htmldom('bdo', init) }\n\n/**\n * [The `blockquote` element](https://html.spec.whatwg.org/#the-blockquote-element)\n * represents a section that is quoted from another source.\n * Content inside a blockquote must be quoted from another source,\n * whose address, if it has one, may be cited in the cite attribute.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-blockquote-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote)\n *\n * @function blockquote\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.cite] Link to the source of the quotation or more information about the edit\n * @return {HTMLQuoteElement}\n */\nexport function blockquote(init) { return htmldom('blockquote', init) }\n\n/**\n * [The `body` element](https://html.spec.whatwg.org/#the-body-element)\n * represents the main content of the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-body-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body)\n *\n * @function body\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Function} [init.onafterprint] Fired at the Window after printing\n * @param {Function} [init.onbeforeprint] Fired at the Window before printing\n * @param {Function} [init.onbeforeunload] Fired at the Window when the page is about to be unloaded, in case the page would like to show a warning prompt\n * @param {Function} [init.onhashchange] Fired at the Window when the fragment part of the document's URL changes\n * @param {Function} [init.onlanguagechange] Fired at the global scope object when the user's preferred languages change\n * @param {Function} [init.onmessage] Fired at an object when it receives a message\n * @param {Function} [init.onoffline] Fired at the global scope object when the network connections fails\n * @param {Function} [init.ononline] Fired at the global scope object when the network connections returns\n * @param {Function} [init.onpagehide] Fired at the Window when the page's entry in the session history stops being the current entry\n * @param {Function} [init.onpageshow] Fired at the Window when the page's entry in the session history becomes the current entry\n * @param {Function} [init.onpopstate] Fired at the Window when the user navigates the session history\n * @param {Function} [init.onrejectionhandled] Fired at global scope objects when a previously-unhandled promise rejection becomes handled\n * @param {Function} [init.onstorage] Fired at Window event when the corresponding localStorage or sessionStorage storage areas change\n * @param {Function} [init.onunhandledrejection] Fired at global scope objects when a promise rejection goes unhandled\n * @param {Function} [init.onunload] Fired at the Window object when the page is going away\n * @return {HTMLBodyElement}\n */\nexport function body(init) { return htmldom('body', init) }\n\n/**\n * [The `br` element](https://html.spec.whatwg.org/#the-br-element)\n * represents a line break.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-br-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br)\n *\n * @function br\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLBRElement}\n */\nexport function br(init) { return htmldom('br', init) }\n\n/**\n * [The `button` element](https://html.spec.whatwg.org/#the-button-element)\n * represents a button labeled by its contents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-button-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535211.aspx)\n *\n * @function button\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Boolean} [init.autofocus] Automatically focus the form control when the page is loaded\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {String} [init.formAction] URL to use for form submission\n * @param {String} [init.formEnctype] Form data set encoding type to use for form submission\n * @param {String} [init.formMethod] HTTP method to use for form submission\n * @param {Boolean} [init.formNoValidate] Bypass form control validation for form submission\n * @param {String} [init.formTarget] Browsing context for form submission\n * @param {String} [init.name] Name of form control to use for form submission and in the form.elements API\n * @param {String} [init.type] Type of button\n * @param {String} [init.value] Value to be used for form submission\n * @param {HTMLMenuElement} [init.menu] Specifies the element's designated pop-up menu\n * @return {HTMLButtonElement}\n */\nexport function button(init) { return htmldom('button', init) }\n\n/**\n * [The `canvas` element](https://html.spec.whatwg.org/#the-canvas-element)\n * provides scripts with a resolution-dependent bitmap canvas,\n * which can be used for rendering graphs, game graphics, art,\n * or other visual images on the fly.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-canvas-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas)\n *\n * @function canvas\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.width] Horizontal dimension\n * @param {Number} [init.height] Vertical dimension\n * @return {HTMLCanvasElement}\n */\nexport function canvas(init) { return htmldom('canvas', init) }\n\n/**\n * [The `caption` element](https://html.spec.whatwg.org/#the-caption-element)\n * represents the title of the table that is its parent,\n * if it has a parent and that is a table element.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-caption-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption)\n *\n * @function caption\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableCaptionElement}\n */\nexport function caption(init) { return htmldom('caption', init) }\n\n/**\n * [The `cite` element](https://html.spec.whatwg.org/#the-cite-element)\n * represents the title of a work (e.g. a book, a paper, an essay, a poem,\n * a score, a song, a script, a film, a TV show, a game, a sculpture, a painting,\n * a theatre production, a play, an opera, a musical, an exhibition, a legal case report,\n * a computer program, etc). This can be a work that is being quoted or referenced in detail\n * (i.e. a citation), or it can just be a work that is mentioned in passing.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-cite-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite)\n *\n * @function cite\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function cite(init) { return htmldom('cite', init) }\n\n/**\n * [The `code` element](https://html.spec.whatwg.org/#the-code-element)\n * represents a fragment of computer code. This could be an XML element name,\n * a file name, a computer program, or any other string that a computer would recognize.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-code-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code)\n *\n * @function code\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function code(init) { return htmldom('code', init) }\n\n/**\n * [The `col` element](https://html.spec.whatwg.org/#the-col-element)\n * represents has a parent and that is a colgroup element that itself has a parent\n * that is a table element, then the col element represents one or more columns\n * in the column group represented by that colgroup.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-col-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535225.aspx)\n *\n * @function col\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.span] Number of columns spanned by the element\n * @return {HTMLTableColElement}\n */\nexport function col(init) { return htmldom('col', init) }\n\n/**\n * [The `colgroup` element](https://html.spec.whatwg.org/#the-colgroup-element)\n * represents represents a group of one or more columns in the table that is its parent,\n * if it has a parent and that is a table element.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-colgroup-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535225.aspx)\n *\n * @function colgroup\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.span] Number of columns spanned by the element\n * @return {HTMLTableColElement}\n */\nexport function colgroup(init) { return htmldom('colgroup', init) }\n\n/**\n * [The `data` element](https://html.spec.whatwg.org/#the-data-element)\n * represents its contents, along with a machine-readable form\n * of those contents in the value attribute.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-data-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataElement)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt706246.aspx)\n *\n * @function data\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.value] Machine-readable value\n * @return {HTMLDataElement}\n */\nexport function data(init) { return htmldom('data', init) }\n\n/**\n * [The `datalist` element](https://html.spec.whatwg.org/#the-datalist-element)\n * represents a set of option elements that represent predefined options for other controls.\n * In the rendering, the datalist element represents nothing and it, along with its children,\n * should be hidden.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-datalist-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/hh772925.aspx)\n *\n * @function datalist\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLDataListElement}\n */\nexport function datalist(init) { return htmldom('datalist', init) }\n\n/**\n * [The `dd` element](https://html.spec.whatwg.org/#the-dd-element)\n * represents the description, definition, or value,\n * part of a term-description group in a description list (dl element).\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-datalist-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535234.aspx)\n *\n * @function dd\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function dd(init) { return htmldom('dd', init) }\n\n/**\n * [The `del` element](https://html.spec.whatwg.org/#the-del-element)\n * represents a removal from the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-del-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535236.aspx)\n *\n * @function del\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.cite] Link to the source of the quotation or more information about the edit\n * @param {String} [init.dateTime] Date and (optionally) time of the change\n * @return {HTMLModElement}\n */\nexport function del(init) { return htmldom('del', init) }\n\n/**\n * [The `details` element](https://html.spec.whatwg.org/#the-details-element)\n * represents a disclosure widget from which the user can obtain additional information or controls.\n *\n * [w3](https://www.w3.org/TR/html/interactive-elements.html#the-details-element)\n * • [MDN elemeent reference](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)\n *\n * @function details\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.open] Whether the details are visible\n * @return {HTMLDetailsElement}\n */\nexport function details(init) { return htmldom('details', init) }\n\n/**\n * [The `dfn` element](https://html.spec.whatwg.org/#the-dfn-element)\n * represents the defining instance of a term. The paragraph, description list group,\n * or section that is the nearest ancestor of the dfn element must also contain\n * the definition(s) for the term given by the dfn element.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-dfn-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535237.aspx)\n *\n * @function dfn\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.title] Special semantics: Full term or expansion of abbreviation\n * @return {HTMLElement}\n */\nexport function dfn(init) { return htmldom('dfn', init) }\n\n/**\n * [The `dialog` element](https://html.spec.whatwg.org/#the-dialog-element)\n * represents a part of an application that a user interacts with to perform a task,\n * for example a dialog box, inspector, or window.\n *\n * [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)\n *\n * @function dialog\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.open] Whether the dialog box is showing\n * @return {HTMLDialogElement}\n */\nexport function dialog(init) { return htmldom('dialog', init) }\n\n/**\n * [The `div` element](https://html.spec.whatwg.org/#the-div-element)\n * has no special meaning at all. It represents its children.\n * It can be used with the class, lang, and title attributes to mark up semantics\n * common to a group of consecutive elements.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-div-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535240.aspx)\n *\n * @function div\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLDivElement}\n */\nexport function div(init) { return htmldom('div', init) }\n\n/**\n * [The `dl` element](https://html.spec.whatwg.org/#the-dl-element)\n * represents an association list consisting of zero or more name-value groups (a description list).\n * A name-value group consists of one or more names (dt elements) followed by one or more values\n * (dd elements), ignoring any nodes other than dt and dd elements.\n * Within a single dl element, there should not be more than one dt element for each name.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-dl-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535241.aspx)\n *\n * @function dl\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLDListElement}\n */\nexport function dl(init) { return htmldom('dl', init) }\n\n/**\n * [The `dt` element](https://html.spec.whatwg.org/#the-dt-element)\n * represents the term, or name, part of a term-description group in a description list (dl element).\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-dt-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535243.aspx)\n *\n * @function dt\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function dt(init) { return htmldom('dt', init) }\n\n/**\n * [The `em` element](https://html.spec.whatwg.org/#the-em-element)\n * represents stress emphasis of its contents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-em-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535244.aspx)\n *\n * @function em\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function em(init) { return htmldom('em', init) }\n\n/**\n * [The `embed` element](https://html.spec.whatwg.org/#the-embed-element)\n * represents provides an integration point for an external (typically non-HTML)\n * application or interactive content.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-embed-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535245.aspx)\n *\n * @function embed\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.type] Type of embedded resource\n * @param {String} [init.width] Horizontal dimension\n * @param {String} [init.height] Vertical dimension\n * @return {HTMLEmbedElement}\n */\nexport function embed(init) { return htmldom('embed', init) }\n\n/**\n * [The `fieldset` element](https://html.spec.whatwg.org/#the-fieldset-element)\n * represents\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-fieldset-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535247.aspx)\n *\n * @function fieldset\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.disabled] Whether the form control is disabled\n * @param {String} [init.form] Associates the control with a form element\n * @param {String} [init.name] Name of form control to use in the form.elements API\n * @return {HTMLFieldSetElement}\n */\nexport function fieldset(init) { return htmldom('fieldset', init) }\n\n/**\n * [The `figcaption` element](https://html.spec.whatwg.org/#the-figcaption-element)\n * represents a caption or legend for the rest of the contents\n * of the figcaption element's parent figure element, if any.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-figcaption-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593037.aspx)\n *\n * @function figcaption\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function figcaption(init) { return htmldom('figcaption', init) }\n\n/**\n * [The `figure` element](https://html.spec.whatwg.org/#the-figure-element)\n * represents some flow content, optionally with a caption,\n * that is self-contained (like a complete sentence) and is typically referenced\n * as a single unit from the main flow of the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-figure-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)\n *\n * @function figure\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function figure(init) { return htmldom('figure', init) }\n\n/**\n * [The `footer` element](https://html.spec.whatwg.org/#the-footer-element)\n * represents a footer for its nearest ancestor sectioning content or sectioning root element.\n * A footer typically contains information about its section such as who wrote it,\n * links to related documents, copyright data, and the like.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-footer-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593039.aspx)\n *\n * @function footer\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function footer(init) { return htmldom('footer', init) }\n\n/**\n * [The `form` element](https://html.spec.whatwg.org/#the-form-element)\n * represents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-form-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535249.aspx)\n *\n * @function form\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.acceptCharset] Character encodings to use for form submission\n * @param {String} [init.action] URL to use for form submission\n * @param {String} [init.autocomplete] Default setting for autofill feature for controls in the form\n * @param {String} [init.enctype] Form data set encoding type to use for form submission\n * @param {String} [init.method] HTTP method to use for form submission\n * @param {String} [init.name] Name of form to use in the document.forms API\n * @param {Boolean} [init.noValidate] Bypass form control validation for form submission\n * @param {String} [init.target] Browsing context for form submission\n * @return {HTMLFormElement}\n */\nexport function form(init) { return htmldom('form', init) }\n\n/**\n * [The `h1`, `h2`, `h3`, `h4`, `h5`, and `h6` elements](https://html.spec.whatwg.org/#the-h1-element)\n * represent headings for their sections.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-h1-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535253.aspx)\n *\n * @function h1\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h1(init) { return htmldom('h1', init) }\n/**\n * See [h1](#h1)\n * @function h2\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h2(init) { return htmldom('h2', init) }\n/**\n * See [h1](#h1)\n * @function h3\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h3(init) { return htmldom('h3', init) }\n/**\n * See [h1](#h1)\n * @function h4\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h4(init) { return htmldom('h4', init) }\n/**\n * See [h1](#h1)\n * @function h5\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h5(init) { return htmldom('h5', init) }\n/**\n * See [h1](#h1)\n * @function h6\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadingElement}\n */\nexport function h6(init) { return htmldom('h6', init) }\n\n/**\n * [The `head` element](https://html.spec.whatwg.org/#the-head-element)\n * represents a collection of metadata for the Document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-head-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/HTMLHeadElement)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535252.aspx)\n *\n * @function head\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHeadElement}\n */\nexport function head(init) { return htmldom('head', init) }\n\n/**\n * [The `header` element](https://html.spec.whatwg.org/#the-header-element)\n * represents a group of introductory or navigational aids.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-header-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593044.aspx)\n *\n * @function header\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function header(init) { return htmldom('header', init) }\n\n/**\n * [The `hgroup` element](https://html.spec.whatwg.org/#the-hgroup-element)\n * represents the heading of a section, which consists\n * of all the h1–h6 element children of the hgroup element.\n * The element is used to group a set of h1–h6 elements when the heading has multiple levels,\n * such as subheadings, alternative titles, or taglines.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-hgroup-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593045.aspx)\n *\n * @function hgroup\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function hgroup(init) { return htmldom('hgroup', init) }\n\n/**\n * [The `hr` element](https://html.spec.whatwg.org/#the-hr-element)\n * represents a paragraph-level thematic break, e.g. a scene change in a story,\n * or a transition to another topic within a section of a reference book.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-hr-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535254.aspx)\n *\n * @function hr\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLHRElement}\n */\nexport function hr(init) { return htmldom('hr', init) }\n\n/**\n * [The `html` element](https://html.spec.whatwg.org/#the-html-element)\n * represents the root of an HTML document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-html-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535255.aspx)\n *\n * @function html\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.manifest] [Application cache manifest](https://html.spec.whatwg.org/#concept-appcache-manifest)\n * @return {HTMLHtmlElement}\n */\nexport function html(init) { return htmldom('html', init) }\n\n/**\n * [The `i` element](https://html.spec.whatwg.org/#the-i-element)\n * represents a span of text in an alternate voice or mood,\n * or otherwise offset from the normal prose in a manner indicating a different quality of text,\n * such as a taxonomic designation, a technical term, an idiomatic phrase from another language,\n * transliteration, a thought, or a ship name in Western texts.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-i-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535257.aspx)\n *\n * @function i\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function i(init) { return htmldom('i', init) }\n\n/**\n * [The `iframe` element](https://html.spec.whatwg.org/#the-iframe-element)\n * represents a [nested browsing context](https://html.spec.whatwg.org/#nested-browsing-context).\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-iframe-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535258.aspx)\n *\n * @function iframe\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.srcdoc] A document to render in the iframe\n * @param {String} [init.name] Name of nested browsing context\n * @param {String} [init.attrset.sandbox] Security rules for nested content\n * @param {String} [init.allowFullScreen] Whether to allow the iframe's contents to use requestFullscreen()\n * @param {String} [init.allowUserMedia] Whether to allow the iframe's contents to use getUserMedia()\n * @param {String} [init.width] Horizontal dimension\n * @param {String} [init.height] Vertical dimension\n * @param {String} [init.referrerPolicy] Determines the referrer policy for fetches initiated by the element\n * @return {HTMLIFrameElement}\n */\nexport function iframe(init) { return htmldom('iframe', init) }\n\n/**\n * [The `img` element](https://html.spec.whatwg.org/#the-img-element)\n * represents an image.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-img-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535259.aspx)\n *\n * @function img\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.alt] Replacement text for use when images are not available\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.srcset] Images to use in different situations (e.g. high-resolution displays, small monitors, etc)\n * @param {String} [init.sizes] Image sizes for different page layouts\n * @param {String} [init.crossOrigin] How the element handles crossorigin requests\n * @param {String} [init.useMap] Name of image map to use\n * @param {Boolean} [init.isMap] Whether the image is a server-side image map\n * @param {Number} [init.width] Horizontal dimension\n * @param {Number} [init.height] Vertical dimension\n * @param {String} [init.referrerPolicy] Determines the referrer policy for fetches initiated by the element\n * @return {HTMLImageElement}\n */\nexport function img(init) { return htmldom('img', init) }\n\n/**\n * [The `input` element](https://html.spec.whatwg.org/#the-input-element)\n * represents a typed data field, usually with a form control to allow the user to edit the data.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-input-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535260.aspx)\n *\n * @function input\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.alt] Replacement text for use when images are not available\n * @param {String} [init.accept] Hint for expected file type in file upload controls\n * @param {String} [init.autocomplete] Hint for form autofill feature\n * @param {Boolean} [init.autofocus] Automatically focus the form control when the page is loaded\n * @param {Boolean} [init.checked] Whether the command or control is checked\n * @param {Boolean} [init.defaultChecked]\n * @param {String} [init.dirName] Name of form control to use for sending the element's directionality in form submission\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {String} [init.formAction] URL to use for form submission\n * @param {String} [init.formEnctype] Form data set encoding type to use for form submission\n * @param {String} [init.formMethod] HTTP method to use for form submission\n * @param {Boolean} [init.formNoValidate] Bypass form control validation for form submission\n * @param {String} [init.formTarget] Browsing context for form submission\n * @param {Number} [init.height] Vertical dimension\n * @param {Boolean} [init.indeterminate]\n * @param {String} [init.inputMode] Hint for selecting an input modality\n * @param {String} [init.max] Maximum value\n * @param {Number} [init.maxLength] Maximum length of value\n * @param {String} [init.min] Minimum value\n * @param {Number} [init.minLength] Minimum length of value\n * @param {Boolean} [init.multiple] Whether to allow multiple values\n * @param {String} [init.name] Name of form control to use for form submission and in the form.elements API\n * @param {String} [init.pattern] Pattern to be matched by the form control's value\n * @param {String} [init.placeholder] User-visible label to be placed within the form control\n * @param {Boolean} [init.readOnly] Whether to allow the value to be edited by the user\n * @param {Boolean} [init.required] Whether the control is required for form submission\n * @param {Number} [init.size] Size of the control\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.step] Granularity to be matched by the form control's value\n * @param {String} [init.type] Type of form control\n * @param {String} [init.value] Value of the form control\n * @param {String} [init.defaultValue]\n * @param {String} [init.width] Horizontal dimension\n * @param {String} [init.title] Special semantics: Description of pattern (when used with pattern attribute).\n * @param {String} [init.attrset.form] Associates the control with a form element (ID reference)\n * @param {String} [init.attrset.list] List of autocomplete options\n * @return {HTMLInputElement}\n */\nexport function input(init) { return htmldom('input', init) }\n\n/**\n * [The `ins` element](https://html.spec.whatwg.org/#the-ins-element)\n * represents an addition to the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-ins-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535842.aspx)\n *\n * @function ins\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.cite] Link to the source of the quotation or more information about the edit\n * @param {String} [init.dateTime] Date and (optionally) time of the change\n * @return {HTMLModElement}\n */\nexport function ins(init) { return htmldom('ins', init) }\n\n/**\n * [The `kbd` element](https://html.spec.whatwg.org/#the-kbd-element)\n * represents user input (typically keyboard input,\n * although it may also be used to represent other input, such as voice commands).\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-kbd-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd)\n *\n * @function kbd\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function kbd(init) { return htmldom('kbd', init) }\n\n/**\n * [The `label` element](https://html.spec.whatwg.org/#the-label-element)\n * represents a caption in a user interface.\n * The caption can be associated with a specific form control,\n * known as the label element's labeled control, either using the for attribute,\n * or by putting the form control inside the label element itself.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-label-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535845.aspx)\n *\n * @function label\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.for] Associate the label with form control\n * @return {HTMLLabelElement}\n */\nexport function label(init) { return htmldom('label', init) }\n\n/**\n * [The `legend` element](https://html.spec.whatwg.org/#the-legend-element)\n * represents a caption for the rest of the contents of the legend element's parent fieldset element, if any.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-legend-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535846.aspx)\n *\n * @function legend\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLLegendElement}\n */\nexport function legend(init) { return htmldom('legend', init) }\n\n/**\n * [The `li` element](https://html.spec.whatwg.org/#the-li-element)\n * represents a list item. If its parent element is an ol, ul, or menu element,\n * then the element is an item of the parent element's list, as defined for those elements.\n * Otherwise, the list item has no defined list-related relationship to any other li element.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-li-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535847.aspx)\n *\n * @function li\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.value] Ordinal value of the list item (if the element is not a child of an ul or menu element)\n * @return {HTMLLIElement}\n */\nexport function li(init) { return htmldom('li', init) }\n\n/**\n * [The `link` element](https://html.spec.whatwg.org/#the-link-element)\n * allows authors to link their document to other resources.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-link-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535848.aspx)\n *\n * @function link\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.href] Address of the hyperlink\n * @param {String} [init.crossOrigin] How the element handles crossorigin requests\n * @param {String} [init.rel] Relationship between the document containing the hyperlink and the destination resource\n * @param {String} [init.as] Destination for a preload request (for `rel=\"preload\"`)\n * @param {String} [init.media] Applicable media\n * @param {String} [init.nonce] Cryptographic nonce used in [Content Security Policy](https://html.spec.whatwg.org/#refsCSP) checks\n * @param {String} [init.hreflang] Language of the linked resource\n * @param {String} [init.type] Hint for the type of the referenced resource\n * @param {String} [init.sizes] Sizes of the icons (for `rel=\"icon\"`)\n * @param {String} [init.referrerPolicy] Determines the referrer policy for fetches initiated by the element\n * @param {String} [init.title] Special semantics: title of the link; [CSS style sheet set name](CSS style sheet set name).\n * @return {HTMLLinkElement}\n */\nexport function link(init) { return htmldom('link', init) }\n\n/**\n * [The `main` element](https://html.spec.whatwg.org/#the-main-element)\n * can be used as a container for the dominant contents of another element.\n * It represents its children.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-main-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt634542.aspx)\n *\n * @function main\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function main(init) { return htmldom('main', init) }\n\n/**\n * [The `map` element](https://html.spec.whatwg.org/#the-map-element),\n * in conjunction with an img element and any area element descendants, defines an image map.\n * The element represents its children.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-map-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535850.aspx)\n *\n * @function map\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.name] Name of [image map](https://html.spec.whatwg.org/#image-map) to reference from the `usemap` attribute\n * @return {HTMLMapElement}\n */\nexport function map(init) { return htmldom('map', init) }\n\n/**\n * [The `mark` element](https://html.spec.whatwg.org/#the-mark-element)\n * represents a run of text in one document marked or highlighted for reference purposes,\n * due to its relevance in another context.\n * When used in a quotation or other block of text referred to from the prose,\n * it indicates a highlight that was not originally present but which has been added\n * to bring the reader's attention to a part of the text that might not have been considered\n * important by the original author when the block was originally written,\n * but which is now under previously unexpected scrutiny.\n * When used in the main prose of a document,\n * it indicates a part of the document that has been highlighted\n * due to its likely relevance to the user's current activity.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-mark-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593046.aspx)\n *\n * @function mark\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function mark(init) { return htmldom('mark', init) }\n\n/**\n * [The `menu` element](https://html.spec.whatwg.org/#the-menu-element)\n * represents a list of commands.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-menu-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMenuElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535852.aspx)\n *\n * @function menu\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.type] Type of menu\n * @param {String} [init.label] User-visible label\n * @return {HTMLMenuElement}\n */\nexport function menu(init) { return htmldom('menu', init) }\n\n/**\n * [The `menuitem` element](https://html.spec.whatwg.org/#the-menuitem-element)\n * represents a command that the user can invoke from a popup menu\n * (either a context menu or the menu of a menu button).\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-menuitem-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMenuItemElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menuitem)\n *\n * @function menuitem\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.type] Type of command\n * @param {String} [init.label] User-visible label\n * @param {String} [init.icon] Icon for the command\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {Boolean} [init.checked] Whether the command or control is checked\n * @param {String} [init.radiogroup] Name of group of commands to treat as a radio button group\n * @param {Boolean} [init.default] Mark the command as being a default command\n * @param {String} [init.title] Special semantics: hint describing the command\n * @return {HTMLMenuItemElement}\n */\nexport function menuitem(init) { return htmldom('menuitem', init) }\n\n/**\n * [The `meta` element](https://html.spec.whatwg.org/#the-meta-element)\n * represents various kinds of metadata that cannot be expressed using the title,\n * base, link, style, and script elements.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-meta-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535853.aspx)\n *\n * @function meta\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.name] Metadata name\n * @param {String} [init.http-equiv] Pragma directive\n * @param {String} [init.content] Value of the element\n * @param {String} [init.attrset.charset] Character encoding declaration\n * @return {HTMLMetaElement}\n */\nexport function meta(init) { return htmldom('meta', init) }\n\n/**\n * [The `meter` element](https://html.spec.whatwg.org/#the-meter-element)\n * represents a scalar measurement within a known range, or a fractional value;\n * for example disk usage, the relevance of a query result,\n * or the fraction of a voting population to have selected a particular candidate.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-meter-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt573149.aspx)\n *\n * @function meter\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.value] Current value of the element\n * @param {Number} [init.min] Lower bound of range\n * @param {Number} [init.max] Upper bound of range\n * @param {Number} [init.low] High limit of low range\n * @param {Number} [init.high] Low limit of high range\n * @param {Number} [init.optimum] Optimum value in gauge\n * @return {HTMLMeterElement}\n */\nexport function meter(init) { return htmldom('meter', init) }\n\n/**\n * [The `nav` element](https://html.spec.whatwg.org/#the-nav-element)\n * represents a section of a page that links to other pages or to parts within the page:\n * a section with navigation links.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-nav-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593047.aspx)\n *\n * @function nav\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function nav(init) { return htmldom('nav', init) }\n\n/**\n * [The `noscript` element](https://html.spec.whatwg.org/#the-noscript-element)\n * represents nothing if scripting is enabled,\n * and represents its children if scripting is disabled.\n * It is used to present different markup to user agents that support scripting\n * and those that don't support scripting, by affecting how the document is parsed.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-noscript-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535858.aspx)\n *\n * @function noscript\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function noscript(init) { return htmldom('noscript', init) }\n\n/**\n * [The `object` element](https://html.spec.whatwg.org/#the-object-element)\n * can represent an external resource, which, depending on the type of the resource,\n * will either be treated as an image, as a nested browsing context,\n * or as an external resource to be processed by a plugin.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-object-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535859.aspx)\n *\n * @function object\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.data] Address of the resource\n * @param {String} [init.type] Type of embedded resource\n * @param {Boolean} [init.typeMustMatch] Whether the type attribute and the Content-Type value need to match for the resource to be used\n * @param {String} [init.name] Name of nested browsing context\n * @param {String} [init.useMap] Name of image map to use\n * @param {String} [init.attrset.form] Associates the control with a form element (ID reference)\n * @param {String} [init.width] Horizontal dimension\n * @param {String} [init.height] Vertical dimension\n * @return {HTMLObjectElement}\n */\nexport function object(init) { return htmldom('object', init) }\n\n/**\n * [The `ol` element](https://html.spec.whatwg.org/#the-ol-element)\n * represents a list of items, where the items have been intentionally ordered,\n * such that changing the order would change the meaning of the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-ol-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535875.aspx)\n *\n * @function ol\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Boolean} [init.reversed] Number the list backwards\n * @param {Number} [init.start] Starting value of the list\n * @param {String} [init.type] Kind of list marker\n * @return {HTMLOListElement}\n */\nexport function ol(init) { return htmldom('ol', init) }\n\n/**\n * [The `optgroup` element](https://html.spec.whatwg.org/#the-optgroup-element)\n * represents a group of option elements with a common label.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-optgroup-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535876.aspx)\n *\n * @function optgroup\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {String} [init.label] User-visible label\n * @return {HTMLOptGroupElement}\n */\nexport function optgroup(init) { return htmldom('optgroup', init) }\n\n/**\n * [The `option` element](https://html.spec.whatwg.org/#the-option-element)\n * represents an option in a select element or as part of a list of suggestions\n * in a datalist element.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-option-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535877.aspx)\n *\n * @function option\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {String} [init.label] User-visible label\n * @param {Boolean} [init.selected] Whether the option is selected by default\n * @param {String} [init.value] Value to be used for form submission\n * @return {HTMLOptionElement}\n */\nexport function option(init) { return htmldom('option', init) }\n\n/**\n * [The `output` element](https://html.spec.whatwg.org/#the-output-element)\n * represents the result of a calculation performed by the application,\n * or the result of a user action.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-output-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt732268.aspx)\n *\n * @function output\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.for] Specifies controls from which the output was calculated\n * @param {String} [init.attrset.form] Associates the control with a form element (ID reference)\n * @param {String} [init.name] Name of form control to use in the [form.elements](https://html.spec.whatwg.org/#dom-form-elements) API\n * @return {HTMLOutputElement}\n */\nexport function output(init) { return htmldom('output', init) }\n\n/**\n * [The `p` element](https://html.spec.whatwg.org/#the-p-element)\n * represents a paragraph.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-p-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535878.aspx)\n *\n * @function p\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLParagraphElement}\n */\nexport function p(init) { return htmldom('p', init) }\n\n/**\n * [The `param` element](https://html.spec.whatwg.org/#the-param-element)\n * defines parameters for plugins invoked by object elements.\n * It does not represent anything on its own.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-param-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535880.aspx)\n *\n * @function param\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.name] Name of parameter\n * @param {String} [init.value] Value of parameter\n * @return {HTMLParamElement}\n */\nexport function param(init) { return htmldom('param', init) }\n\n/**\n * [The `picture` element](https://html.spec.whatwg.org/#the-picture-element)\n * is a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-picture-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt574001.aspx)\n *\n * @function picture\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLPictureElement}\n */\nexport function picture(init) { return htmldom('picture', init) }\n\n/**\n * [The `pre` element](https://html.spec.whatwg.org/#the-pre-element)\n * represents a block of preformatted text, in which structure is represented\n * by typographic conventions rather than by elements.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-pre-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535883.aspx)\n *\n * @function pre\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLPreElement}\n */\nexport function pre(init) { return htmldom('pre', init) }\n\n/**\n * [The `progress` element](https://html.spec.whatwg.org/#the-progress-element)\n * represents the completion progress of a task. The progress is either indeterminate,\n * indicating that progress is being made but that it is not clear\n * how much more work remains to be done before the task is complete\n * (e.g. because the task is waiting for a remote host to respond),\n * or the progress is a number in the range zero to a maximum,\n * giving the fraction of work that has so far been completed.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-progress-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/hh772953.aspx)\n *\n * @function progress\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {Number} [init.value] Current value of the element\n * @param {Number} [init.max] Upper bound of range\n * @return {HTMLProgressElement}\n */\nexport function progress(init) { return htmldom('progress', init) }\n\n/**\n * [The `q` element](https://html.spec.whatwg.org/#the-q-element)\n * represents some phrasing content quoted from another source.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-q-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTML*Element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535884.aspx)\n *\n * @function q\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.cite] Link to the source of the quotation or more information about the edit\n * @return {HTMLQuoteElement}\n */\nexport function q(init) { return htmldom('q', init) }\n\n/**\n * [The `rp` element](https://html.spec.whatwg.org/#the-rp-element)\n * can be used to provide parentheses or other content\n * around a ruby text component of a ruby annotation,\n * to be shown by user agents that don't support ruby annotations.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-rp-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp)\n *\n * @function rp\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function rp(init) { return htmldom('rp', init) }\n\n/**\n * [The `rt` element](https://html.spec.whatwg.org/#the-rt-element)\n * marks the ruby text component of a ruby annotation.\n * When it is the child of a ruby element, it doesn't represent anything itself,\n * but the ruby element uses it as part of determining what it represents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-rt-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535885.aspx)\n *\n * @function rt\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function rt(init) { return htmldom('rt', init) }\n\n/**\n * [The `ruby` element](https://html.spec.whatwg.org/#the-ruby-element)\n * allows one or more spans of phrasing content to be marked with ruby annotations.\n * Ruby annotations are short runs of text presented alongside base text,\n * primarily used in East Asian typography as a guide for pronunciation\n * or to include other annotations.\n * In Japanese, this form of typography is also known as furigana.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-ruby-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535886.aspx)\n *\n * @function ruby\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function ruby(init) { return htmldom('ruby', init) }\n\n/**\n * [The `s` element](https://html.spec.whatwg.org/#the-s-element)\n * represents contents that are no longer accurate or no longer relevant.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-s-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535890.aspx)\n *\n * @function s\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function s(init) { return htmldom('s', init) }\n\n/**\n * [The `samp` element](https://html.spec.whatwg.org/#the-samp-element)\n * represents sample or quoted output from another program or computing system.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-samp-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535891.aspx)\n *\n * @function samp\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function samp(init) { return htmldom('samp', init) }\n\n/**\n * [The `script` element](https://html.spec.whatwg.org/#the-script-element)\n * allows authors to include dynamic script and data blocks in their documents.\n * The element does not represent content for the user.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-script-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535892.aspx)\n *\n * @function script\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.type] Type of embedded resource\n * @param {String} [init.charset] Character encoding of the external script resource\n * @param {String} [init.async] Execute script when available, without blocking\n * @param {String} [init.defer] Defer script execution\n * @param {String} [init.crossOrigin] How the element handles crossorigin requests\n * @param {String} [init.nonce] Cryptographic nonce used in Content Security Policy checks [CSP]\n * @return {HTMLScriptElement}\n */\nexport function script(init) { return htmldom('script', init) }\n\n/**\n * [The `section` element](https://html.spec.whatwg.org/#the-section-element)\n * represents a generic section of a document or application.\n * A section, in this context, is a thematic grouping of content,\n * typically with a heading.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-section-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/gg593059.aspx)\n *\n * @function section\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function section(init) { return htmldom('section', init) }\n\n/**\n * [The `select` element](https://html.spec.whatwg.org/#the-select-element)\n * represents a control for selecting amongst a set of options.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-select-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535893.aspx)\n *\n * @function select\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.autocomplete] Hint for form autofill feature\n * @param {Boolean} [init.autofocus] Automatically focus the form control when the page is loaded\n * @param {Boolean} [init.disabled] Whether the form control is disabled\n * @param {String} [init.attrset.form] Associates the control with a form element (ID reference)\n * @param {Boolean} [init.multiple] Whether to allow multiple values\n * @param {String} [init.name] Name of form control to use for form submission and in the form.elements API\n * @param {Boolean} [init.required] Whether the control is required for form submission\n * @param {Number} [init.size] Size of the control\n * @return {HTMLSelectElement}\n */\nexport function select(init) { return htmldom('select', init) }\n\n/**\n * [The `slot` element](https://html.spec.whatwg.org/#the-slot-element)\n * defines a slot. It is typically used in a shadow tree.\n * A slot element represents its assigned nodes, if any, and its contents otherwise.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-slot-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot)\n *\n * @function slot\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.name] Name of shadow tree slot\n * @return {HTMLSlotElement}\n */\nexport function slot(init) { return htmldom('slot', init) }\n\n/**\n * [The `small` element](https://html.spec.whatwg.org/#the-small-element)\n * represents side comments such as small print.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-small-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535894.aspx)\n *\n * @function small\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function small(init) { return htmldom('small', init) }\n\n/**\n * [The `source` element](https://html.spec.whatwg.org/#the-source-element)\n * allows authors to specify multiple alternative source sets for img elements\n * or multiple alternative media resources for media elements.\n * It does not represent anything on its own.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-source-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ff975070.aspx)\n *\n * @function source\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.type] Type of embedded resource\n * @param {String} [init.srcset] Images to use in different situations (e.g. high-resolution displays, small monitors, etc)\n * @param {String} [init.sizes] Image sizes for different page layouts\n * @param {String} [init.media] Applicable media\n * @return {HTMLSourceElement}\n */\nexport function source(init) { return htmldom('source', init) }\n\n/**\n * [The `span` element](https://html.spec.whatwg.org/#the-span-element)\n * doesn't mean anything on its own,\n * but can be useful when used together with the global attributes,\n * e.g. class, lang, or dir. It represents its children.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-span-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535895.aspx)\n *\n * @function span\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLSpanElement}\n */\nexport function span(init) { return htmldom('span', init) }\n\n/**\n * [The `strong` element](https://html.spec.whatwg.org/#the-strong-element)\n * represents strong importance, seriousness, or urgency for its contents.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-strong-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTML*Element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535897.aspx)\n *\n * @function strong\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function strong(init) { return htmldom('strong', init) }\n\n/**\n * [The `style` element](https://html.spec.whatwg.org/#the-style-element)\n * allows authors to embed style information in their documents.\n * The style element is one of several inputs to the styling processing model.\n * The element does not represent content for the user.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-style-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535898.aspx)\n *\n * @function style\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.media] Applicable media\n * @param {String} [init.nonce] Cryptographic nonce used in [Content Security Policy](https://html.spec.whatwg.org/#refsCSP) checks\n * @param {String} [init.type] Type of embedded resource\n * @param {String} [init.title] Special semantics: CSS style sheet set name.\n * @return {HTMLStyleElement}\n */\nexport function style(init) { return htmldom('style', init) }\n\n/**\n * [The `sub` element](https://html.spec.whatwg.org/#the-sub-element)\n * represents a subscript.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-sub-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535899.aspx)\n *\n * @function sub\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function sub(init) { return htmldom('sub', init) }\n\n/**\n * [The `summary` element](https://html.spec.whatwg.org/#the-summary-element)\n *  represents a summary, caption, or legend for the rest of the contents\n *  of the summary element's parent details element, if any.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-summary-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary)\n *\n * @function summary\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function summary(init) { return htmldom('summary', init) }\n\n/**\n * [The `sup` element](https://html.spec.whatwg.org/#the-sup-element)\n * represents a superscript\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-sup-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535900.aspx)\n *\n * @function sup\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function sup(init) { return htmldom('sup', init) }\n\n/**\n * [The `table` element](https://html.spec.whatwg.org/#the-table-element)\n * represents data with more than one dimension, in the form of a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-table-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535901.aspx)\n *\n * @function table\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableElement}\n */\nexport function table(init) { return htmldom('table', init) }\n\n/**\n * [The `tbody` element](https://html.spec.whatwg.org/#the-tbody-element)\n * represents a block of rows that consist of a body of data for the parent table element,\n * if the tbody element has a parent and it is a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-tbody-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535902.aspx)\n *\n * @function tbody\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableSectionElement}\n */\nexport function tbody(init) { return htmldom('tbody', init) }\n\n/**\n * [The `td` element](https://html.spec.whatwg.org/#the-td-element)\n * represents a data cell in a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-td-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535903.aspx)\n *\n * @function td\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.colSpan] Number of columns that the cell is to span\n * @param {String} [init.rowSpan] Number of rows that the cell is to span\n * @param {String} [init.headers] The header cells for this cell\n * @return {HTMLTableCellElement}\n */\nexport function td(init) { return htmldom('td', init) }\n\n/**\n * [The `template` element](https://html.spec.whatwg.org/#the-template-element)\n * is used to declare fragments of HTML that can be cloned and inserted in the document by script.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-template-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt586693.aspx)\n *\n * @function template\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTemplateElement}\n */\nexport function template(init) { return htmldom('template', init) }\n\n/**\n * [The `textarea` element](https://html.spec.whatwg.org/#the-textarea-element)\n * represents a multiline plain text edit control for the element's raw value.\n * The contents of the control represent the control's default value.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-textarea-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535904.aspx)\n *\n * @function textarea\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.autocomplete] Hint for form autofill feature\n * @param {String} [init.autofocus] Automatically focus the form control when the page is loaded\n * @param {String} [init.cols] Maximum number of characters per line\n * @param {String} [init.dirName] Name of form control to use for sending the element's directionality in form submission\n * @param {String} [init.disabled] Whether the form control is disabled\n * @param {String} [init.form] Associates the control with a form element\n * @param {String} [init.inputMode] Hint for selecting an input modality\n * @param {String} [init.maxLength] Maximum length of value\n * @param {String} [init.minLength] Minimum length of value\n * @param {String} [init.name] Name of form control to use for form submission and in the form.elements API\n * @param {String} [init.placeholder] User-visible label to be placed within the form control\n * @param {String} [init.readOnly] Whether to allow the value to be edited by the user\n * @param {String} [init.required] Whether the control is required for form submission\n * @param {String} [init.rows] Number of lines to show\n * @param {String} [init.wrap] How the value of the form control is to be wrapped for form submission\n * @return {HTMLTextAreaElement}\n */\nexport function textarea(init) { return htmldom('textarea', init) }\n\n/**\n * [The `tfoot` element](https://html.spec.whatwg.org/#the-tfoot-element)\n *  represents the block of rows that consist of the column summaries (footers)\n *  for the parent table element, if the tfoot element has a parent and it is a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-tfoot-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535907.aspx)\n *\n * @function tfoot\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableSectionElement}\n */\nexport function tfoot(init) { return htmldom('tfoot', init) }\n\n/**\n * [The `th` element](https://html.spec.whatwg.org/#the-th-element)\n * represents a header cell in a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-th-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535908.aspx)\n *\n * @function th\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.colSpan] Number of columns that the cell is to span\n * @param {String} [init.rowSpan] Number of rows that the cell is to span\n * @param {String} [init.headers] The header cells for this cell\n * @param {String} [init.scope] Specifies which cells the header cell applies to\n * @param {String} [init.abbr] Alternative label to use for the header cell when referencing the cell in other contexts\n * @return {HTMLTableCellElement}\n */\nexport function th(init) { return htmldom('th', init) }\n\n/**\n * [The `thead` element](https://html.spec.whatwg.org/#the-thead-element)\n * represents the block of rows that consist of the column labels (headers)\n * for the parent table element, if the thead element has a parent and it is a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-thead-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535909.aspx)\n *\n * @function thead\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableSectionElement}\n */\nexport function thead(init) { return htmldom('thead', init) }\n\n/**\n * [The `time` element](https://html.spec.whatwg.org/#the-time-element)\n * represents its contents,\n * along with a machine-readable form of those contents in the datetime attribute.\n * The kind of content is limited to various kinds of dates,\n * times, time-zone offsets, and durations, as described below.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-time-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTimeElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/mt706248.aspx)\n *\n * @function time\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.datetime] Machine-readable value\n * @return {HTMLTimeElement}\n */\nexport function time(init) { return htmldom('time', init) }\n\n/**\n * [The `title` element](https://html.spec.whatwg.org/#the-title-element)\n * represents the document's title or name.\n * Authors should use titles that identify their documents\n * even when they are used out of context,\n * for example in a user's history or bookmarks, or in search results.\n * The document's title is often different from its first heading,\n * since the first heading does not have to stand alone when taken out of context.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-title-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535910.aspx)\n *\n * @function title\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTitleElement}\n */\nexport function title(init) { return htmldom('title', init) }\n\n/**\n * [The `tr` element](https://html.spec.whatwg.org/#the-tr-element)\n * represents a row of cells in a table.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-tr-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535911.aspx)\n *\n * @function tr\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLTableRowElement}\n */\nexport function tr(init) { return htmldom('tr', init) }\n\n/**\n * [The `track` element](https://html.spec.whatwg.org/#the-track-element)\n * allows authors to specify explicit external timed text tracks for media elements.\n * It does not represent anything on its own.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-track-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/hh772958.aspx)\n *\n * @function track\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.kind] The type of text track\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.srclang] Language of the text track\n * @param {String} [init.label] User-visible label\n * @param {Boolean} [init.default] Enable the track if no other text track is more suitable\n * @return {HTMLTrackElement}\n */\nexport function track(init) { return htmldom('track', init) }\n\n/**\n * [The `u` element](https://html.spec.whatwg.org/#the-u-element)\n * represents a span of text with an unarticulated,\n * though explicitly rendered, non-textual annotation,\n * such as labeling the text as being a proper name in Chinese text\n * (a Chinese proper name mark), or labeling the text as being misspelt.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-u-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535913.aspx)\n *\n * @function u\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function u(init) { return htmldom('u', init) }\n\n/**\n * [The `ul` element](https://html.spec.whatwg.org/#the-ul-element)\n * represents a list of items, where the order of the items is not important — that is,\n * where changing the order would not materially change the meaning of the document.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-ul-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535914.aspx)\n *\n * @function ul\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLUListElement}\n */\nexport function ul(init) { return htmldom('ul', init) }\n\n/**\n * [the `var` element](https://html.spec.whatwg.org/#the-var-element)\n * represents a variable.\n * This could be an actual variable in a mathematical expression or programming context,\n * an identifier representing a constant, a symbol identifying a physical quantity,\n * a function parameter, or just be a term used as a placeholder in prose.\n *\n * **`var` is reserved JS keyword so use `variable` instead**\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-var-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/ms535916.aspx)\n *\n * @function variable\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function variable(init) { return htmldom('var', init) }\n\n/**\n * [The `video` element](https://html.spec.whatwg.org/#the-video-element)\n * is used for playing videos or movies, and audio files with captions.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-video-element)\n * • [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)\n * • [msdn ref](https://msdn.microsoft.com/en-us/library/hh772959.aspx)\n *\n * @function video\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @param {String} [init.src] Address of the resource\n * @param {String} [init.crossOrigin] How the element handles crossorigin requests\n * @param {String} [init.poster] Poster frame to show prior to video playback\n * @param {String} [init.preload] Hints how much buffering the media resource will likely need\n * @param {Boolean} [init.autoplay] Hint that the media resource can be started automatically when the page is loaded\n * @param {Boolean} [init.playsInline] Encourage the user agent to display video content within the element's playback area\n * @param {Boolean} [init.loop] Whether to loop the media resource\n * @param {Number} [init.muted] Whether to mute the media resource by default\n * @param {Boolean} [init.controls] Show user agent controls\n * @param {Number} [init.width] Horizontal dimension\n * @param {Number} [init.height] Vertical dimension\n * @return {HTMLVideoElement}\n */\nexport function video(init) { return htmldom('video', init) }\n\n/**\n * [The `wbr` element](https://html.spec.whatwg.org/#the-wbr-element)\n * represents a line break opportunity.\n *\n * [w3](https://www.w3.org/TR/html/single-page.html#the-wbr-element)\n * • [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr)\n *\n * @function wbr\n * @param {{}|String|Array|Node|DOMAssembler} [init] `NodeInit` dictionary\n * @return {HTMLElement}\n */\nexport function wbr(init) { return htmldom('wbr', init) }\n"
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assembler",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~assembler",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "lib/htmlassembler.js~HTMLAssembler"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "htmldom",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~htmldom",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{htmldom}",
    "description": "Assembles the specified `HTMLElement` node\n\nProvides `HTMLElement` interface and all HTML DOM interfaces which inherit from it\n\n• [w3](https://www.w3.org/TR/html/single-page.html#htmlelement-htmlelement)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)\n• [msdn api](https://msdn.microsoft.com/en-us/library/hh869697.aspx)",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "htmldom"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": "element tag name"
      },
      {
        "nullable": null,
        "types": [
          "{}|String|Node|DOMAssembler|Array"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset",
        "description": "`HTMLElement` attributes set as a dictionary object"
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dataset",
        "description": "`HTMLElement` dataset as a dictionary object"
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init.style",
        "description": "`HTMLElement` style as a dictionary object (CSSStyleDeclaration)"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "DOMAssembler",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "init.children",
        "description": "`HTMLElement` child nodes"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.accessKey",
        "description": "Specify an access key for the element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.className",
        "description": "`Element` class name; reflects \"class\" attribute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.contentEditable",
        "description": "Specify whether or not the element is editable"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dir",
        "description": "Specify a text writing directionality of the content of the current element"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.hidden",
        "description": "Specify the visibility state of the element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.id",
        "description": "`Element` unique identifier; reflects \"id\" content attribute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.innerHTML",
        "description": "Paste markup string as an inner DOM structure"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.innerText",
        "description": "Paste string data as a single text node"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.lang",
        "description": "Specify a human-language of the element and its contents"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.tabIndex",
        "description": "Specify a focusability of the element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.textContent",
        "description": "Paste string data as a single text node"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Specify title of the element; represents a browser title tooltip content"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onabort",
        "description": "Fired at the Window when the download was aborted by the user"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onblur",
        "description": "Fired at nodes when they stop being focused"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.oncancel",
        "description": "Fired at dialog elements when they are canceled by the user (e.g. by pressing the Escape key)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onchange",
        "description": "Fired at controls when the user commits a value change (see also the input event)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onclick",
        "description": "Normally a mouse event; also synthetically fired at an element before its activation behavior is run, when an element is activated from a non-pointer input device (e.g. a keyboard)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onclose",
        "description": "Fired at dialog elements when they are closed, and at WebSocket elements when the connection is terminated"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.oncontextmenu",
        "description": "Fired at elements when the user requests their context menu"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.oncuechange",
        "description": "One or more cues in the track have become active or stopped being active."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ondblclick",
        "description": "Fires on double click"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ondurationchange",
        "description": "The duration attribute has just been updated."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onemptied",
        "description": "networkState is NETWORK_EMPTY; all the IDL attributes are in their initial states."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onended",
        "description": "currentTime equals the end of the media resource; ended is true."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onerror",
        "description": "Fired when unexpected errors occur (e.g. networking errors, script errors, decoding errors)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onfocus",
        "description": "Fired at nodes gaining focus"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.oninput",
        "description": "Fired at controls when the user changes the value"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.oninvalid",
        "description": "Fired at controls during form validation if they do not satisfy their constraints"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onkeydown",
        "description": "A user agent dispatches this event when a key is pressed down"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onkeypress",
        "description": "A user agent dispatches this event when a key is pressed down, if and only if that key normally produces a character value"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onkeyup",
        "description": "A user agent dispatches this event when a key is released"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onload",
        "description": "Fired at the Window when the document has finished loading; fired at an element containing a resource (e.g. img, embed) when its resource has finished loading"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onloadend",
        "description": "Fired at img elements after a successful load"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onloadstart",
        "description": "Fired at img elements when a load begins"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmousedown",
        "description": "A user agent dispatches this event when a pointing device button is pressed over an element"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmouseenter",
        "description": "A user agent dispatches this event when a pointing device is moved onto the boundaries of an element or one of its descendent elements"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmouseleave",
        "description": "A user agent dispatches this event when a pointing device is moved off of the boundaries of an element and all of its descendent elements"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmousemove",
        "description": "A user agent dispatches this event when a pointing device is moved while it is over an element"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmouseout",
        "description": "A user agent dispatches this event when a pointing device is moved off of the boundaries of an element"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmouseover",
        "description": "A user agent dispatches this event when a pointing device is moved onto the boundaries of an element"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmouseup",
        "description": "A user agent dispatches this event when a pointing device button is released over an element"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onwheel",
        "description": "A user agent dispatches this event when a mouse wheel has been rotated around any axis, or when an equivalent input device (such as a mouse-ball, certain tablets or touchpads, etc.) has emulated such an action"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onpause",
        "description": "The element has been paused. Fired after the pause() method has returned"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onplay",
        "description": "The element is no longer paused. Fired after the play() method has returned, or when the autoplay attribute has caused playback to begin"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onplaying",
        "description": "Playback is ready to start after having been paused or delayed due to lack of media data"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onprogress",
        "description": "Fired at img elements during a CORS-same-origin image load"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onratechange",
        "description": "Either the defaultPlaybackRate or the playbackRate attribute has just been updated"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onreset",
        "description": "Fired at a form element when it is reset"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onresize",
        "description": "Fired at the Window when the viewport is resized"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onscroll",
        "description": "Fired at the Document or element when the viewport or element is scrolled, respectively"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onseeked",
        "description": "The seeking IDL attribute changed to false after the current playback position was changed"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onseeking",
        "description": "The seeking IDL attribute changed to true, and the user agent has started seeking to a new position"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onselect",
        "description": "Fired at form controls when their text selection is adjusted (whether by an API or by the user)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onshow",
        "description": "Fired at a menu element when it is shown as a context menu"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onstalled",
        "description": "The user agent is trying to fetch media data, but data is unexpectedly not forthcoming"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onsubmit",
        "description": "Fired at a form element when it is submitted"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onsuspend",
        "description": "The user agent is intentionally not currently fetching media data"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ontimeupdate",
        "description": "The current playback position changed as part of normal playback or in an especially interesting way, for example discontinuously"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ontoggle",
        "description": "Fired at details elements when they open or close"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onvolumechange",
        "description": "Either the volume attribute or the muted attribute has changed. Fired after the relevant attribute's setter has returned"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onwaiting",
        "description": "Playback has stopped because the next frame is not available, but the user agent expects that frame to become available in due course"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "a",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~a",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{a}",
    "description": "[The `a` element](https://html.spec.whatwg.org/#the-a-element)\n - If the `a` element has an `href` attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents.\n - If the `a` element has no `href` attribute, then the element represents a placeholder for where a link might otherwise have been placed, if it had been relevant, consisting of just the element's contents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-a-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a)\n• [msdn api](https://msdn.microsoft.com/en-us/library/hh869682.aspx)",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "a"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.href",
        "description": "Address of the hyperlink"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.target",
        "description": "Browsing context for hyperlink navigation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.download",
        "description": "Whether to download the resource instead of navigating to it, and its file name if so"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ping",
        "description": "URLs to ping"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rel",
        "description": "Relationship between the location in the document containing the hyperlink and the destination resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.hreflang",
        "description": "Language of the linked resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Hint for the type of the referenced resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.referrerPolicy",
        "description": "Determines the referrer policy for fetches initiated by the element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLAnchorElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "abbr",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~abbr",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{abbr}",
    "description": "[The `abbr` element](https://html.spec.whatwg.org/#the-abbr-element)\nrepresents an abbreviation or acronym, optionally with its expansion.\nThe `title` attribute may be used to provide an expansion of the abbreviation.\nThe attribute, if specified, must contain an expansion of the abbreviation, and nothing else.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-abbr-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr)",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "abbr"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: full term or expansion of abbreviation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "address",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~address",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{address}",
    "description": "[The `address` element](https://html.spec.whatwg.org/#the-address-element)\nrepresents the contact information for its nearest `article` or `body` element ancestor.\nIf that is the `body` element, then the contact information applies to the document as a whole.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-address-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address)",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "address"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "area",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~area",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{area}",
    "description": "[The `area` element](https://html.spec.whatwg.org/#the-area-element)\nrepresents either a hyperlink with some text and a corresponding area on an image map,\nor a dead area on an image map.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-area-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area)",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "area"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.alt",
        "description": "Replacement text for use when images are not available"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.coords",
        "description": "Coordinates for the shape to be created in an image map"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.shape",
        "description": "The kind of shape to be created in an image map"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.href",
        "description": "Address of the hyperlink"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.target",
        "description": "Browsing context for hyperlink navigation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.download",
        "description": "Whether to download the resource instead of navigating to it, and its file name if so"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ping",
        "description": "URLs to ping"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rel",
        "description": "Relationship between the location in the document containing the hyperlink and the destination resource"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLAreaElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "article",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~article",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{article}",
    "description": "[The `article` element](https://html.spec.whatwg.org/#the-article-element)\nrepresents a complete, or self-contained, composition in a document, page, application,\nor site and that is, in principle, independently distributable or reusable, e.g. in syndication.\nThis could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment,\nan interactive widget or gadget, or any other independent item of content.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-article-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article)",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "article"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "aside",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~aside",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{aside}",
    "description": "[The `aside` element](https://html.spec.whatwg.org/#the-aside-element)\nrepresents a section of a page that consists of content that is tangentially related to the content around the aside element,\nand which could be considered separate from that content.\nSuch sections are often represented as sidebars in printed typography.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-aside-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside)",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "aside"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "audio",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~audio",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{audio}",
    "description": "[The `audio` element](https://html.spec.whatwg.org/#the-audio-element)\nrepresents a sound or audio stream.\nContent may be provided inside the `audio` element.\nUser agents should not show this content to the user;\nit is intended for older Web browsers which do not support audio, so that legacy audio plugins can be tried,\nor to show text to the users of these older browsers informing them of how to access the audio contents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-audio-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "audio"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.crossorigin",
        "description": "How the element handles crossorigin requests"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.preload",
        "description": "Hints how much buffering the media resource will likely need"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autoplay",
        "description": "Hint that the media resource can be started automatically when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.loop",
        "description": "Whether to loop the media resource"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.muted",
        "description": "Whether to mute the media resource by default"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.controls",
        "description": "Show user agent controls"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLAudioElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "b",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~b",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{b}",
    "description": "[The `b` element](https://html.spec.whatwg.org/#the-b-element)\nrepresents a span of text to which attention is being drawn\nfor utilitarian purposes without conveying any extra importance\nand with no implication of an alternate voice or mood,\nsuch as key words in a document abstract, product names in a review,\nactionable words in interactive text-driven software, or an article lede.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-b-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b)",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "b"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "base",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~base",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{base}",
    "description": "[The `base` element](https://html.spec.whatwg.org/#the-base-element)\nrepresents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-base-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base)",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "base"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dir",
        "description": "special semantics"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bdi",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~bdi",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{bdi}",
    "description": "[The `bdi` element](https://html.spec.whatwg.org/#the-bdi-element)\nrepresents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-bdi-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi)",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "bdi"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dir",
        "description": "special semantics"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bdo",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~bdo",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{bdo}",
    "description": "[The `bdo` element](https://html.spec.whatwg.org/#the-bdo-element)\nrepresents explicit text directionality formatting control for its children.\nIt allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-bdo-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo)",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "bdo"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dir",
        "description": "special semantics: `rtl` or `ltr` values allowed only"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "blockquote",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~blockquote",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{blockquote}",
    "description": "[The `blockquote` element](https://html.spec.whatwg.org/#the-blockquote-element)\nrepresents a section that is quoted from another source.\nContent inside a blockquote must be quoted from another source,\nwhose address, if it has one, may be cited in the cite attribute.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-blockquote-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote)",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "blockquote"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.cite",
        "description": "Link to the source of the quotation or more information about the edit"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLQuoteElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "body",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~body",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{body}",
    "description": "[The `body` element](https://html.spec.whatwg.org/#the-body-element)\nrepresents the main content of the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-body-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body)",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "body"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onafterprint",
        "description": "Fired at the Window after printing"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onbeforeprint",
        "description": "Fired at the Window before printing"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onbeforeunload",
        "description": "Fired at the Window when the page is about to be unloaded, in case the page would like to show a warning prompt"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onhashchange",
        "description": "Fired at the Window when the fragment part of the document's URL changes"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onlanguagechange",
        "description": "Fired at the global scope object when the user's preferred languages change"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onmessage",
        "description": "Fired at an object when it receives a message"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onoffline",
        "description": "Fired at the global scope object when the network connections fails"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.ononline",
        "description": "Fired at the global scope object when the network connections returns"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onpagehide",
        "description": "Fired at the Window when the page's entry in the session history stops being the current entry"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onpageshow",
        "description": "Fired at the Window when the page's entry in the session history becomes the current entry"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onpopstate",
        "description": "Fired at the Window when the user navigates the session history"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onrejectionhandled",
        "description": "Fired at global scope objects when a previously-unhandled promise rejection becomes handled"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onstorage",
        "description": "Fired at Window event when the corresponding localStorage or sessionStorage storage areas change"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onunhandledrejection",
        "description": "Fired at global scope objects when a promise rejection goes unhandled"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "init.onunload",
        "description": "Fired at the Window object when the page is going away"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLBodyElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "br",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~br",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{br}",
    "description": "[The `br` element](https://html.spec.whatwg.org/#the-br-element)\nrepresents a line break.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-br-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br)",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "br"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLBRElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "button",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~button",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{button}",
    "description": "[The `button` element](https://html.spec.whatwg.org/#the-button-element)\nrepresents a button labeled by its contents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-button-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535211.aspx)",
    "lineNumber": 367,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "button"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autofocus",
        "description": "Automatically focus the form control when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formAction",
        "description": "URL to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formEnctype",
        "description": "Form data set encoding type to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formMethod",
        "description": "HTTP method to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formNoValidate",
        "description": "Bypass form control validation for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formTarget",
        "description": "Browsing context for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use for form submission and in the form.elements API"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of button"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Value to be used for form submission"
      },
      {
        "nullable": null,
        "types": [
          "HTMLMenuElement"
        ],
        "spread": false,
        "optional": true,
        "name": "init.menu",
        "description": "Specifies the element's designated pop-up menu"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLButtonElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "canvas",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~canvas",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{canvas}",
    "description": "[The `canvas` element](https://html.spec.whatwg.org/#the-canvas-element)\nprovides scripts with a resolution-dependent bitmap canvas,\nwhich can be used for rendering graphs, game graphics, art,\nor other visual images on the fly.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-canvas-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas)",
    "lineNumber": 385,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "canvas"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "caption",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~caption",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{caption}",
    "description": "[The `caption` element](https://html.spec.whatwg.org/#the-caption-element)\nrepresents the title of the table that is its parent,\nif it has a parent and that is a table element.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-caption-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption)",
    "lineNumber": 400,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "caption"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableCaptionElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "cite",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~cite",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{cite}",
    "description": "[The `cite` element](https://html.spec.whatwg.org/#the-cite-element)\nrepresents the title of a work (e.g. a book, a paper, an essay, a poem,\na score, a song, a script, a film, a TV show, a game, a sculpture, a painting,\na theatre production, a play, an opera, a musical, an exhibition, a legal case report,\na computer program, etc). This can be a work that is being quoted or referenced in detail\n(i.e. a citation), or it can just be a work that is mentioned in passing.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-cite-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite)",
    "lineNumber": 417,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "cite"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "code",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~code",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{code}",
    "description": "[The `code` element](https://html.spec.whatwg.org/#the-code-element)\nrepresents a fragment of computer code. This could be an XML element name,\na file name, a computer program, or any other string that a computer would recognize.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-code-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code)",
    "lineNumber": 431,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "code"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "col",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~col",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{col}",
    "description": "[The `col` element](https://html.spec.whatwg.org/#the-col-element)\nrepresents has a parent and that is a colgroup element that itself has a parent\nthat is a table element, then the col element represents one or more columns\nin the column group represented by that colgroup.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-col-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535225.aspx)",
    "lineNumber": 448,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "col"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.span",
        "description": "Number of columns spanned by the element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableColElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "colgroup",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~colgroup",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{colgroup}",
    "description": "[The `colgroup` element](https://html.spec.whatwg.org/#the-colgroup-element)\nrepresents represents a group of one or more columns in the table that is its parent,\nif it has a parent and that is a table element.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-colgroup-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535225.aspx)",
    "lineNumber": 464,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "colgroup"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.span",
        "description": "Number of columns spanned by the element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableColElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "data",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~data",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{data}",
    "description": "[The `data` element](https://html.spec.whatwg.org/#the-data-element)\nrepresents its contents, along with a machine-readable form\nof those contents in the value attribute.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-data-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataElement)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt706246.aspx)",
    "lineNumber": 480,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Machine-readable value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDataElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "datalist",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~datalist",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{datalist}",
    "description": "[The `datalist` element](https://html.spec.whatwg.org/#the-datalist-element)\nrepresents a set of option elements that represent predefined options for other controls.\nIn the rendering, the datalist element represents nothing and it, along with its children,\nshould be hidden.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-datalist-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/hh772925.aspx)",
    "lineNumber": 496,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "datalist"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDataListElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dd",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~dd",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{dd}",
    "description": "[The `dd` element](https://html.spec.whatwg.org/#the-dd-element)\nrepresents the description, definition, or value,\npart of a term-description group in a description list (dl element).\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-datalist-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535234.aspx)",
    "lineNumber": 511,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "dd"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "del",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~del",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{del}",
    "description": "[The `del` element](https://html.spec.whatwg.org/#the-del-element)\nrepresents a removal from the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-del-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535236.aspx)",
    "lineNumber": 528,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "del"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.cite",
        "description": "Link to the source of the quotation or more information about the edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dateTime",
        "description": "Date and (optionally) time of the change"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLModElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "details",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~details",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{details}",
    "description": "[The `details` element](https://html.spec.whatwg.org/#the-details-element)\nrepresents a disclosure widget from which the user can obtain additional information or controls.\n\n[w3](https://www.w3.org/TR/html/interactive-elements.html#the-details-element)\n• [MDN elemeent reference](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)",
    "lineNumber": 542,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "details"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.open",
        "description": "Whether the details are visible"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDetailsElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dfn",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~dfn",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{dfn}",
    "description": "[The `dfn` element](https://html.spec.whatwg.org/#the-dfn-element)\nrepresents the defining instance of a term. The paragraph, description list group,\nor section that is the nearest ancestor of the dfn element must also contain\nthe definition(s) for the term given by the dfn element.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-dfn-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535237.aspx)",
    "lineNumber": 559,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "dfn"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: Full term or expansion of abbreviation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dialog",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~dialog",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{dialog}",
    "description": "[The `dialog` element](https://html.spec.whatwg.org/#the-dialog-element)\nrepresents a part of an application that a user interacts with to perform a task,\nfor example a dialog box, inspector, or window.\n\n[mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)",
    "lineNumber": 574,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "dialog"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.open",
        "description": "Whether the dialog box is showing"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDialogElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "div",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~div",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{div}",
    "description": "[The `div` element](https://html.spec.whatwg.org/#the-div-element)\nhas no special meaning at all. It represents its children.\nIt can be used with the class, lang, and title attributes to mark up semantics\ncommon to a group of consecutive elements.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-div-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535240.aspx)",
    "lineNumber": 591,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "div"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDivElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dl",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~dl",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{dl}",
    "description": "[The `dl` element](https://html.spec.whatwg.org/#the-dl-element)\nrepresents an association list consisting of zero or more name-value groups (a description list).\nA name-value group consists of one or more names (dt elements) followed by one or more values\n(dd elements), ignoring any nodes other than dt and dd elements.\nWithin a single dl element, there should not be more than one dt element for each name.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-dl-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535241.aspx)",
    "lineNumber": 609,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "dl"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLDListElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dt",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~dt",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{dt}",
    "description": "[The `dt` element](https://html.spec.whatwg.org/#the-dt-element)\nrepresents the term, or name, part of a term-description group in a description list (dl element).\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-dt-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535243.aspx)",
    "lineNumber": 623,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "dt"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "em",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~em",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{em}",
    "description": "[The `em` element](https://html.spec.whatwg.org/#the-em-element)\nrepresents stress emphasis of its contents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-em-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535244.aspx)",
    "lineNumber": 637,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "em"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "embed",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~embed",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{embed}",
    "description": "[The `embed` element](https://html.spec.whatwg.org/#the-embed-element)\nrepresents provides an integration point for an external (typically non-HTML)\napplication or interactive content.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-embed-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535245.aspx)",
    "lineNumber": 657,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "embed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of embedded resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLEmbedElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "fieldset",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~fieldset",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{fieldset}",
    "description": "[The `fieldset` element](https://html.spec.whatwg.org/#the-fieldset-element)\nrepresents\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-fieldset-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535247.aspx)",
    "lineNumber": 675,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "fieldset"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.form",
        "description": "Associates the control with a form element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use in the form.elements API"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLFieldSetElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "figcaption",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~figcaption",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{figcaption}",
    "description": "[The `figcaption` element](https://html.spec.whatwg.org/#the-figcaption-element)\nrepresents a caption or legend for the rest of the contents\nof the figcaption element's parent figure element, if any.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-figcaption-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593037.aspx)",
    "lineNumber": 690,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "figcaption"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "figure",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~figure",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{figure}",
    "description": "[The `figure` element](https://html.spec.whatwg.org/#the-figure-element)\nrepresents some flow content, optionally with a caption,\nthat is self-contained (like a complete sentence) and is typically referenced\nas a single unit from the main flow of the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-figure-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)",
    "lineNumber": 705,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "figure"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "footer",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~footer",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{footer}",
    "description": "[The `footer` element](https://html.spec.whatwg.org/#the-footer-element)\nrepresents a footer for its nearest ancestor sectioning content or sectioning root element.\nA footer typically contains information about its section such as who wrote it,\nlinks to related documents, copyright data, and the like.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-footer-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593039.aspx)",
    "lineNumber": 721,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "footer"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "form",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~form",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{form}",
    "description": "[The `form` element](https://html.spec.whatwg.org/#the-form-element)\nrepresents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-form-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535249.aspx)",
    "lineNumber": 744,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "form"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.acceptCharset",
        "description": "Character encodings to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.action",
        "description": "URL to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autocomplete",
        "description": "Default setting for autofill feature for controls in the form"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.enctype",
        "description": "Form data set encoding type to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.method",
        "description": "HTTP method to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form to use in the document.forms API"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.noValidate",
        "description": "Bypass form control validation for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.target",
        "description": "Browsing context for form submission"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLFormElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h1",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h1",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h1}",
    "description": "[The `h1`, `h2`, `h3`, `h4`, `h5`, and `h6` elements](https://html.spec.whatwg.org/#the-h1-element)\nrepresent headings for their sections.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-h1-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535253.aspx)",
    "lineNumber": 759,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h1"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h2",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h2",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h2}",
    "description": "See [h1](#h1)",
    "lineNumber": 766,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h2"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h3",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h3",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h3}",
    "description": "See [h1](#h1)",
    "lineNumber": 773,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h3"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h4",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h4",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h4}",
    "description": "See [h1](#h1)",
    "lineNumber": 780,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h4"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h5",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h5",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h5}",
    "description": "See [h1](#h1)",
    "lineNumber": 787,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h5"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "h6",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~h6",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{h6}",
    "description": "See [h1](#h1)",
    "lineNumber": 794,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "h6"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadingElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "head",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~head",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{head}",
    "description": "[The `head` element](https://html.spec.whatwg.org/#the-head-element)\nrepresents a collection of metadata for the Document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-head-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/HTMLHeadElement)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535252.aspx)",
    "lineNumber": 809,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "head"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHeadElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "header",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~header",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{header}",
    "description": "[The `header` element](https://html.spec.whatwg.org/#the-header-element)\nrepresents a group of introductory or navigational aids.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-header-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593044.aspx)",
    "lineNumber": 823,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "header"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 79,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "hgroup",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~hgroup",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{hgroup}",
    "description": "[The `hgroup` element](https://html.spec.whatwg.org/#the-hgroup-element)\nrepresents the heading of a section, which consists\nof all the h1–h6 element children of the hgroup element.\nThe element is used to group a set of h1–h6 elements when the heading has multiple levels,\nsuch as subheadings, alternative titles, or taglines.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-hgroup-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593045.aspx)",
    "lineNumber": 840,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "hgroup"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "hr",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~hr",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{hr}",
    "description": "[The `hr` element](https://html.spec.whatwg.org/#the-hr-element)\nrepresents a paragraph-level thematic break, e.g. a scene change in a story,\nor a transition to another topic within a section of a reference book.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-hr-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535254.aspx)",
    "lineNumber": 856,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "hr"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHRElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "html",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~html",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{html}",
    "description": "[The `html` element](https://html.spec.whatwg.org/#the-html-element)\nrepresents the root of an HTML document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-html-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535255.aspx)",
    "lineNumber": 872,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "html"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.manifest",
        "description": "[Application cache manifest](https://html.spec.whatwg.org/#concept-appcache-manifest)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLHtmlElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "i",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~i",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{i}",
    "description": "[The `i` element](https://html.spec.whatwg.org/#the-i-element)\nrepresents a span of text in an alternate voice or mood,\nor otherwise offset from the normal prose in a manner indicating a different quality of text,\nsuch as a taxonomic designation, a technical term, an idiomatic phrase from another language,\ntransliteration, a thought, or a ship name in Western texts.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-i-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535257.aspx)",
    "lineNumber": 889,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "i"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "iframe",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~iframe",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{iframe}",
    "description": "[The `iframe` element](https://html.spec.whatwg.org/#the-iframe-element)\nrepresents a [nested browsing context](https://html.spec.whatwg.org/#nested-browsing-context).\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-iframe-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535258.aspx)",
    "lineNumber": 913,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "iframe"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.srcdoc",
        "description": "A document to render in the iframe"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of nested browsing context"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.sandbox",
        "description": "Security rules for nested content"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.allowFullScreen",
        "description": "Whether to allow the iframe's contents to use requestFullscreen()"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.allowUserMedia",
        "description": "Whether to allow the iframe's contents to use getUserMedia()"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.referrerPolicy",
        "description": "Determines the referrer policy for fetches initiated by the element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLIFrameElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "img",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~img",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{img}",
    "description": "[The `img` element](https://html.spec.whatwg.org/#the-img-element)\nrepresents an image.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-img-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535259.aspx)",
    "lineNumber": 938,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "img"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.alt",
        "description": "Replacement text for use when images are not available"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.srcset",
        "description": "Images to use in different situations (e.g. high-resolution displays, small monitors, etc)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.sizes",
        "description": "Image sizes for different page layouts"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.crossOrigin",
        "description": "How the element handles crossorigin requests"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.useMap",
        "description": "Name of image map to use"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.isMap",
        "description": "Whether the image is a server-side image map"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.referrerPolicy",
        "description": "Determines the referrer policy for fetches initiated by the element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "input",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~input",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{input}",
    "description": "[The `input` element](https://html.spec.whatwg.org/#the-input-element)\nrepresents a typed data field, usually with a form control to allow the user to edit the data.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-input-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535260.aspx)",
    "lineNumber": 989,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "input"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.alt",
        "description": "Replacement text for use when images are not available"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.accept",
        "description": "Hint for expected file type in file upload controls"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autocomplete",
        "description": "Hint for form autofill feature"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autofocus",
        "description": "Automatically focus the form control when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.checked",
        "description": "Whether the command or control is checked"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.defaultChecked",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dirName",
        "description": "Name of form control to use for sending the element's directionality in form submission"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formAction",
        "description": "URL to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formEnctype",
        "description": "Form data set encoding type to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formMethod",
        "description": "HTTP method to use for form submission"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formNoValidate",
        "description": "Bypass form control validation for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.formTarget",
        "description": "Browsing context for form submission"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.indeterminate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.inputMode",
        "description": "Hint for selecting an input modality"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.max",
        "description": "Maximum value"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.maxLength",
        "description": "Maximum length of value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.min",
        "description": "Minimum value"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.minLength",
        "description": "Minimum length of value"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.multiple",
        "description": "Whether to allow multiple values"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use for form submission and in the form.elements API"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.pattern",
        "description": "Pattern to be matched by the form control's value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.placeholder",
        "description": "User-visible label to be placed within the form control"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.readOnly",
        "description": "Whether to allow the value to be edited by the user"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.required",
        "description": "Whether the control is required for form submission"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.size",
        "description": "Size of the control"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.step",
        "description": "Granularity to be matched by the form control's value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of form control"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Value of the form control"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.defaultValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: Description of pattern (when used with pattern attribute)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.form",
        "description": "Associates the control with a form element (ID reference)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.list",
        "description": "List of autocomplete options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLInputElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ins",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~ins",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{ins}",
    "description": "[The `ins` element](https://html.spec.whatwg.org/#the-ins-element)\nrepresents an addition to the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-ins-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535842.aspx)",
    "lineNumber": 1006,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "ins"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.cite",
        "description": "Link to the source of the quotation or more information about the edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dateTime",
        "description": "Date and (optionally) time of the change"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLModElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "kbd",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~kbd",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{kbd}",
    "description": "[The `kbd` element](https://html.spec.whatwg.org/#the-kbd-element)\nrepresents user input (typically keyboard input,\nalthough it may also be used to represent other input, such as voice commands).\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-kbd-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd)",
    "lineNumber": 1020,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "kbd"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "label",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~label",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{label}",
    "description": "[The `label` element](https://html.spec.whatwg.org/#the-label-element)\nrepresents a caption in a user interface.\nThe caption can be associated with a specific form control,\nknown as the label element's labeled control, either using the for attribute,\nor by putting the form control inside the label element itself.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-label-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535845.aspx)",
    "lineNumber": 1039,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "label"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.for",
        "description": "Associate the label with form control"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLLabelElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "legend",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~legend",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{legend}",
    "description": "[The `legend` element](https://html.spec.whatwg.org/#the-legend-element)\nrepresents a caption for the rest of the contents of the legend element's parent fieldset element, if any.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-legend-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535846.aspx)",
    "lineNumber": 1054,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLLegendElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "li",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~li",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{li}",
    "description": "[The `li` element](https://html.spec.whatwg.org/#the-li-element)\nrepresents a list item. If its parent element is an ol, ul, or menu element,\nthen the element is an item of the parent element's list, as defined for those elements.\nOtherwise, the list item has no defined list-related relationship to any other li element.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-li-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535847.aspx)",
    "lineNumber": 1072,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "li"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Ordinal value of the list item (if the element is not a child of an ul or menu element)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLLIElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "link",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~link",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{link}",
    "description": "[The `link` element](https://html.spec.whatwg.org/#the-link-element)\nallows authors to link their document to other resources.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-link-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535848.aspx)",
    "lineNumber": 1098,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "link"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.href",
        "description": "Address of the hyperlink"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.crossOrigin",
        "description": "How the element handles crossorigin requests"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rel",
        "description": "Relationship between the document containing the hyperlink and the destination resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.as",
        "description": "Destination for a preload request (for `rel=\"preload\"`)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.media",
        "description": "Applicable media"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.nonce",
        "description": "Cryptographic nonce used in [Content Security Policy](https://html.spec.whatwg.org/#refsCSP) checks"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.hreflang",
        "description": "Language of the linked resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Hint for the type of the referenced resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.sizes",
        "description": "Sizes of the icons (for `rel=\"icon\"`)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.referrerPolicy",
        "description": "Determines the referrer policy for fetches initiated by the element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: title of the link; [CSS style sheet set name](CSS style sheet set name)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLLinkElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "main",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~main",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{main}",
    "description": "[The `main` element](https://html.spec.whatwg.org/#the-main-element)\ncan be used as a container for the dominant contents of another element.\nIt represents its children.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-main-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt634542.aspx)",
    "lineNumber": 1113,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "main"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "map",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~map",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{map}",
    "description": "[The `map` element](https://html.spec.whatwg.org/#the-map-element),\nin conjunction with an img element and any area element descendants, defines an image map.\nThe element represents its children.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-map-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535850.aspx)",
    "lineNumber": 1130,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of [image map](https://html.spec.whatwg.org/#image-map) to reference from the `usemap` attribute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLMapElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mark",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~mark",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{mark}",
    "description": "[The `mark` element](https://html.spec.whatwg.org/#the-mark-element)\nrepresents a run of text in one document marked or highlighted for reference purposes,\ndue to its relevance in another context.\nWhen used in a quotation or other block of text referred to from the prose,\nit indicates a highlight that was not originally present but which has been added\nto bring the reader's attention to a part of the text that might not have been considered\nimportant by the original author when the block was originally written,\nbut which is now under previously unexpected scrutiny.\nWhen used in the main prose of a document,\nit indicates a part of the document that has been highlighted\ndue to its likely relevance to the user's current activity.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-mark-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593046.aspx)",
    "lineNumber": 1153,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "mark"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "menu",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~menu",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{menu}",
    "description": "[The `menu` element](https://html.spec.whatwg.org/#the-menu-element)\nrepresents a list of commands.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-menu-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMenuElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535852.aspx)",
    "lineNumber": 1170,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "menu"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of menu"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.label",
        "description": "User-visible label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLMenuElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "menuitem",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~menuitem",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{menuitem}",
    "description": "[The `menuitem` element](https://html.spec.whatwg.org/#the-menuitem-element)\nrepresents a command that the user can invoke from a popup menu\n(either a context menu or the menu of a menu button).\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-menuitem-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMenuItemElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menuitem)",
    "lineNumber": 1193,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "menuitem"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of command"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.label",
        "description": "User-visible label"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.icon",
        "description": "Icon for the command"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.checked",
        "description": "Whether the command or control is checked"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.radiogroup",
        "description": "Name of group of commands to treat as a radio button group"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.default",
        "description": "Mark the command as being a default command"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: hint describing the command"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLMenuItemElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "meta",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~meta",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{meta}",
    "description": "[The `meta` element](https://html.spec.whatwg.org/#the-meta-element)\nrepresents various kinds of metadata that cannot be expressed using the title,\nbase, link, style, and script elements.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-meta-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535853.aspx)",
    "lineNumber": 1213,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "meta"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Metadata name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.http-equiv",
        "description": "Pragma directive"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.content",
        "description": "Value of the element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.charset",
        "description": "Character encoding declaration"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLMetaElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "meter",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~meter",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{meter}",
    "description": "[The `meter` element](https://html.spec.whatwg.org/#the-meter-element)\nrepresents a scalar measurement within a known range, or a fractional value;\nfor example disk usage, the relevance of a query result,\nor the fraction of a voting population to have selected a particular candidate.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-meter-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt573149.aspx)",
    "lineNumber": 1236,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "meter"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Current value of the element"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.min",
        "description": "Lower bound of range"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.max",
        "description": "Upper bound of range"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.low",
        "description": "High limit of low range"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.high",
        "description": "Low limit of high range"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.optimum",
        "description": "Optimum value in gauge"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLMeterElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "nav",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~nav",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{nav}",
    "description": "[The `nav` element](https://html.spec.whatwg.org/#the-nav-element)\nrepresents a section of a page that links to other pages or to parts within the page:\na section with navigation links.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-nav-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593047.aspx)",
    "lineNumber": 1251,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "nav"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "noscript",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~noscript",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{noscript}",
    "description": "[The `noscript` element](https://html.spec.whatwg.org/#the-noscript-element)\nrepresents nothing if scripting is enabled,\nand represents its children if scripting is disabled.\nIt is used to present different markup to user agents that support scripting\nand those that don't support scripting, by affecting how the document is parsed.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-noscript-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535858.aspx)",
    "lineNumber": 1268,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "noscript"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "object",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~object",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{object}",
    "description": "[The `object` element](https://html.spec.whatwg.org/#the-object-element)\ncan represent an external resource, which, depending on the type of the resource,\nwill either be treated as an image, as a nested browsing context,\nor as an external resource to be processed by a plugin.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-object-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535859.aspx)",
    "lineNumber": 1293,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.data",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of embedded resource"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.typeMustMatch",
        "description": "Whether the type attribute and the Content-Type value need to match for the resource to be used"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of nested browsing context"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.useMap",
        "description": "Name of image map to use"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.form",
        "description": "Associates the control with a form element (ID reference)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLObjectElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ol",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~ol",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{ol}",
    "description": "[The `ol` element](https://html.spec.whatwg.org/#the-ol-element)\nrepresents a list of items, where the items have been intentionally ordered,\nsuch that changing the order would change the meaning of the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-ol-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535875.aspx)",
    "lineNumber": 1312,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "ol"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.reversed",
        "description": "Number the list backwards"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.start",
        "description": "Starting value of the list"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Kind of list marker"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLOListElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "optgroup",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~optgroup",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{optgroup}",
    "description": "[The `optgroup` element](https://html.spec.whatwg.org/#the-optgroup-element)\nrepresents a group of option elements with a common label.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-optgroup-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535876.aspx)",
    "lineNumber": 1329,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "optgroup"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.label",
        "description": "User-visible label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLOptGroupElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "option",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~option",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{option}",
    "description": "[The `option` element](https://html.spec.whatwg.org/#the-option-element)\nrepresents an option in a select element or as part of a list of suggestions\nin a datalist element.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-option-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535877.aspx)",
    "lineNumber": 1349,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "option"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.label",
        "description": "User-visible label"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.selected",
        "description": "Whether the option is selected by default"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Value to be used for form submission"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLOptionElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "output",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~output",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{output}",
    "description": "[The `output` element](https://html.spec.whatwg.org/#the-output-element)\nrepresents the result of a calculation performed by the application,\nor the result of a user action.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-output-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt732268.aspx)",
    "lineNumber": 1368,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "output"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.for",
        "description": "Specifies controls from which the output was calculated"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.form",
        "description": "Associates the control with a form element (ID reference)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use in the [form.elements](https://html.spec.whatwg.org/#dom-form-elements) API"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLOutputElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 106,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "p",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~p",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{p}",
    "description": "[The `p` element](https://html.spec.whatwg.org/#the-p-element)\nrepresents a paragraph.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-p-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535878.aspx)",
    "lineNumber": 1383,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "p"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLParagraphElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "param",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~param",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{param}",
    "description": "[The `param` element](https://html.spec.whatwg.org/#the-param-element)\ndefines parameters for plugins invoked by object elements.\nIt does not represent anything on its own.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-param-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535880.aspx)",
    "lineNumber": 1401,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "param"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of parameter"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Value of parameter"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLParamElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "picture",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~picture",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{picture}",
    "description": "[The `picture` element](https://html.spec.whatwg.org/#the-picture-element)\nis a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-picture-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt574001.aspx)",
    "lineNumber": 1416,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "picture"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLPictureElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pre",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~pre",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{pre}",
    "description": "[The `pre` element](https://html.spec.whatwg.org/#the-pre-element)\nrepresents a block of preformatted text, in which structure is represented\nby typographic conventions rather than by elements.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-pre-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535883.aspx)",
    "lineNumber": 1432,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "pre"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLPreElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "progress",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~progress",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{progress}",
    "description": "[The `progress` element](https://html.spec.whatwg.org/#the-progress-element)\nrepresents the completion progress of a task. The progress is either indeterminate,\nindicating that progress is being made but that it is not clear\nhow much more work remains to be done before the task is complete\n(e.g. because the task is waiting for a remote host to respond),\nor the progress is a number in the range zero to a maximum,\ngiving the fraction of work that has so far been completed.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-progress-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/hh772953.aspx)",
    "lineNumber": 1454,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "progress"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.value",
        "description": "Current value of the element"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.max",
        "description": "Upper bound of range"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLProgressElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "q",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~q",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{q}",
    "description": "[The `q` element](https://html.spec.whatwg.org/#the-q-element)\nrepresents some phrasing content quoted from another source.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-q-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTML*Element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535884.aspx)",
    "lineNumber": 1470,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "q"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.cite",
        "description": "Link to the source of the quotation or more information about the edit"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLQuoteElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rp",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~rp",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{rp}",
    "description": "[The `rp` element](https://html.spec.whatwg.org/#the-rp-element)\ncan be used to provide parentheses or other content\naround a ruby text component of a ruby annotation,\nto be shown by user agents that don't support ruby annotations.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-rp-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp)",
    "lineNumber": 1485,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "rp"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rt",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~rt",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{rt}",
    "description": "[The `rt` element](https://html.spec.whatwg.org/#the-rt-element)\nmarks the ruby text component of a ruby annotation.\nWhen it is the child of a ruby element, it doesn't represent anything itself,\nbut the ruby element uses it as part of determining what it represents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-rt-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535885.aspx)",
    "lineNumber": 1501,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "rt"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ruby",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~ruby",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{ruby}",
    "description": "[The `ruby` element](https://html.spec.whatwg.org/#the-ruby-element)\nallows one or more spans of phrasing content to be marked with ruby annotations.\nRuby annotations are short runs of text presented alongside base text,\nprimarily used in East Asian typography as a guide for pronunciation\nor to include other annotations.\nIn Japanese, this form of typography is also known as furigana.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-ruby-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535886.aspx)",
    "lineNumber": 1519,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "ruby"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "s",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~s",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{s}",
    "description": "[The `s` element](https://html.spec.whatwg.org/#the-s-element)\nrepresents contents that are no longer accurate or no longer relevant.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-s-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535890.aspx)",
    "lineNumber": 1533,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "s"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "samp",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~samp",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{samp}",
    "description": "[The `samp` element](https://html.spec.whatwg.org/#the-samp-element)\nrepresents sample or quoted output from another program or computing system.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-samp-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535891.aspx)",
    "lineNumber": 1547,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "samp"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 117,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "script",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~script",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{script}",
    "description": "[The `script` element](https://html.spec.whatwg.org/#the-script-element)\nallows authors to include dynamic script and data blocks in their documents.\nThe element does not represent content for the user.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-script-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535892.aspx)",
    "lineNumber": 1570,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "script"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of embedded resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.charset",
        "description": "Character encoding of the external script resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.async",
        "description": "Execute script when available, without blocking"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.defer",
        "description": "Defer script execution"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.crossOrigin",
        "description": "How the element handles crossorigin requests"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.nonce",
        "description": "Cryptographic nonce used in Content Security Policy checks [CSP]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLScriptElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "section",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~section",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{section}",
    "description": "[The `section` element](https://html.spec.whatwg.org/#the-section-element)\nrepresents a generic section of a document or application.\nA section, in this context, is a thematic grouping of content,\ntypically with a heading.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-section-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/gg593059.aspx)",
    "lineNumber": 1586,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "section"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "select",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~select",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{select}",
    "description": "[The `select` element](https://html.spec.whatwg.org/#the-select-element)\nrepresents a control for selecting amongst a set of options.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-select-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535893.aspx)",
    "lineNumber": 1609,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "select"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autocomplete",
        "description": "Hint for form autofill feature"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autofocus",
        "description": "Automatically focus the form control when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset.form",
        "description": "Associates the control with a form element (ID reference)"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.multiple",
        "description": "Whether to allow multiple values"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use for form submission and in the form.elements API"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.required",
        "description": "Whether the control is required for form submission"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.size",
        "description": "Size of the control"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLSelectElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "slot",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~slot",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{slot}",
    "description": "[The `slot` element](https://html.spec.whatwg.org/#the-slot-element)\ndefines a slot. It is typically used in a shadow tree.\nA slot element represents its assigned nodes, if any, and its contents otherwise.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-slot-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot)",
    "lineNumber": 1625,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "slot"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of shadow tree slot"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLSlotElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "small",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~small",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{small}",
    "description": "[The `small` element](https://html.spec.whatwg.org/#the-small-element)\nrepresents side comments such as small print.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-small-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535894.aspx)",
    "lineNumber": 1639,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "small"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "source",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~source",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{source}",
    "description": "[The `source` element](https://html.spec.whatwg.org/#the-source-element)\nallows authors to specify multiple alternative source sets for img elements\nor multiple alternative media resources for media elements.\nIt does not represent anything on its own.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-source-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ff975070.aspx)",
    "lineNumber": 1661,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "source"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of embedded resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.srcset",
        "description": "Images to use in different situations (e.g. high-resolution displays, small monitors, etc)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.sizes",
        "description": "Image sizes for different page layouts"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.media",
        "description": "Applicable media"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLSourceElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 123,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "span",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~span",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{span}",
    "description": "[The `span` element](https://html.spec.whatwg.org/#the-span-element)\ndoesn't mean anything on its own,\nbut can be useful when used together with the global attributes,\ne.g. class, lang, or dir. It represents its children.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-span-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535895.aspx)",
    "lineNumber": 1678,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "span"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLSpanElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 124,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "strong",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~strong",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{strong}",
    "description": "[The `strong` element](https://html.spec.whatwg.org/#the-strong-element)\nrepresents strong importance, seriousness, or urgency for its contents.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-strong-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTML*Element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535897.aspx)",
    "lineNumber": 1693,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "strong"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "style",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~style",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{style}",
    "description": "[The `style` element](https://html.spec.whatwg.org/#the-style-element)\nallows authors to embed style information in their documents.\nThe style element is one of several inputs to the styling processing model.\nThe element does not represent content for the user.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-style-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535898.aspx)",
    "lineNumber": 1714,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "style"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.media",
        "description": "Applicable media"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.nonce",
        "description": "Cryptographic nonce used in [Content Security Policy](https://html.spec.whatwg.org/#refsCSP) checks"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.type",
        "description": "Type of embedded resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.title",
        "description": "Special semantics: CSS style sheet set name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLStyleElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "sub",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~sub",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{sub}",
    "description": "[The `sub` element](https://html.spec.whatwg.org/#the-sub-element)\nrepresents a subscript.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-sub-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535899.aspx)",
    "lineNumber": 1728,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "sub"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "summary",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~summary",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{summary}",
    "description": "[The `summary` element](https://html.spec.whatwg.org/#the-summary-element)\n represents a summary, caption, or legend for the rest of the contents\n of the summary element's parent details element, if any.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-summary-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary)",
    "lineNumber": 1742,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "summary"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "sup",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~sup",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{sup}",
    "description": "[The `sup` element](https://html.spec.whatwg.org/#the-sup-element)\nrepresents a superscript\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-sup-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535900.aspx)",
    "lineNumber": 1756,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "sup"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "table",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~table",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{table}",
    "description": "[The `table` element](https://html.spec.whatwg.org/#the-table-element)\nrepresents data with more than one dimension, in the form of a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-table-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535901.aspx)",
    "lineNumber": 1771,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "table"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "tbody",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~tbody",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{tbody}",
    "description": "[The `tbody` element](https://html.spec.whatwg.org/#the-tbody-element)\nrepresents a block of rows that consist of a body of data for the parent table element,\nif the tbody element has a parent and it is a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-tbody-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535902.aspx)",
    "lineNumber": 1787,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "tbody"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableSectionElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "td",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~td",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{td}",
    "description": "[The `td` element](https://html.spec.whatwg.org/#the-td-element)\nrepresents a data cell in a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-td-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535903.aspx)",
    "lineNumber": 1805,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "td"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.colSpan",
        "description": "Number of columns that the cell is to span"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rowSpan",
        "description": "Number of rows that the cell is to span"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.headers",
        "description": "The header cells for this cell"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableCellElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "template",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~template",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{template}",
    "description": "[The `template` element](https://html.spec.whatwg.org/#the-template-element)\nis used to declare fragments of HTML that can be cloned and inserted in the document by script.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-template-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt586693.aspx)",
    "lineNumber": 1820,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "template"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTemplateElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "textarea",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~textarea",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{textarea}",
    "description": "[The `textarea` element](https://html.spec.whatwg.org/#the-textarea-element)\nrepresents a multiline plain text edit control for the element's raw value.\nThe contents of the control represent the control's default value.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-textarea-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535904.aspx)",
    "lineNumber": 1851,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "textarea"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autocomplete",
        "description": "Hint for form autofill feature"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autofocus",
        "description": "Automatically focus the form control when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.cols",
        "description": "Maximum number of characters per line"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.dirName",
        "description": "Name of form control to use for sending the element's directionality in form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.disabled",
        "description": "Whether the form control is disabled"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.form",
        "description": "Associates the control with a form element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.inputMode",
        "description": "Hint for selecting an input modality"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.maxLength",
        "description": "Maximum length of value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.minLength",
        "description": "Minimum length of value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.name",
        "description": "Name of form control to use for form submission and in the form.elements API"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.placeholder",
        "description": "User-visible label to be placed within the form control"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.readOnly",
        "description": "Whether to allow the value to be edited by the user"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.required",
        "description": "Whether the control is required for form submission"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rows",
        "description": "Number of lines to show"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.wrap",
        "description": "How the value of the form control is to be wrapped for form submission"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTextAreaElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "tfoot",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~tfoot",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{tfoot}",
    "description": "[The `tfoot` element](https://html.spec.whatwg.org/#the-tfoot-element)\n represents the block of rows that consist of the column summaries (footers)\n for the parent table element, if the tfoot element has a parent and it is a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-tfoot-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535907.aspx)",
    "lineNumber": 1867,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "tfoot"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableSectionElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "th",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~th",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{th}",
    "description": "[The `th` element](https://html.spec.whatwg.org/#the-th-element)\nrepresents a header cell in a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-th-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535908.aspx)",
    "lineNumber": 1887,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "th"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.colSpan",
        "description": "Number of columns that the cell is to span"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.rowSpan",
        "description": "Number of rows that the cell is to span"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.headers",
        "description": "The header cells for this cell"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.scope",
        "description": "Specifies which cells the header cell applies to"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.abbr",
        "description": "Alternative label to use for the header cell when referencing the cell in other contexts"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableCellElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "thead",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~thead",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{thead}",
    "description": "[The `thead` element](https://html.spec.whatwg.org/#the-thead-element)\nrepresents the block of rows that consist of the column labels (headers)\nfor the parent table element, if the thead element has a parent and it is a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-thead-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535909.aspx)",
    "lineNumber": 1903,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "thead"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableSectionElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "time",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~time",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{time}",
    "description": "[The `time` element](https://html.spec.whatwg.org/#the-time-element)\nrepresents its contents,\nalong with a machine-readable form of those contents in the datetime attribute.\nThe kind of content is limited to various kinds of dates,\ntimes, time-zone offsets, and durations, as described below.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-time-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTimeElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/mt706248.aspx)",
    "lineNumber": 1922,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "time"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.datetime",
        "description": "Machine-readable value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTimeElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "title",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~title",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{title}",
    "description": "[The `title` element](https://html.spec.whatwg.org/#the-title-element)\nrepresents the document's title or name.\nAuthors should use titles that identify their documents\neven when they are used out of context,\nfor example in a user's history or bookmarks, or in search results.\nThe document's title is often different from its first heading,\nsince the first heading does not have to stand alone when taken out of context.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-title-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535910.aspx)",
    "lineNumber": 1942,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "title"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTitleElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "tr",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~tr",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{tr}",
    "description": "[The `tr` element](https://html.spec.whatwg.org/#the-tr-element)\nrepresents a row of cells in a table.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-tr-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535911.aspx)",
    "lineNumber": 1957,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "tr"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTableRowElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "track",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~track",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{track}",
    "description": "[The `track` element](https://html.spec.whatwg.org/#the-track-element)\nallows authors to specify explicit external timed text tracks for media elements.\nIt does not represent anything on its own.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-track-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/hh772958.aspx)",
    "lineNumber": 1978,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "track"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.kind",
        "description": "The type of text track"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.srclang",
        "description": "Language of the text track"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.label",
        "description": "User-visible label"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.default",
        "description": "Enable the track if no other text track is more suitable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLTrackElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "u",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~u",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{u}",
    "description": "[The `u` element](https://html.spec.whatwg.org/#the-u-element)\nrepresents a span of text with an unarticulated,\nthough explicitly rendered, non-textual annotation,\nsuch as labeling the text as being a proper name in Chinese text\n(a Chinese proper name mark), or labeling the text as being misspelt.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-u-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535913.aspx)",
    "lineNumber": 1995,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "u"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 142,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ul",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~ul",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{ul}",
    "description": "[The `ul` element](https://html.spec.whatwg.org/#the-ul-element)\nrepresents a list of items, where the order of the items is not important — that is,\nwhere changing the order would not materially change the meaning of the document.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-ul-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535914.aspx)",
    "lineNumber": 2011,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "ul"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLUListElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "variable",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~variable",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{variable}",
    "description": "[the `var` element](https://html.spec.whatwg.org/#the-var-element)\nrepresents a variable.\nThis could be an actual variable in a mathematical expression or programming context,\nan identifier representing a constant, a symbol identifying a physical quantity,\na function parameter, or just be a term used as a placeholder in prose.\n\n**`var` is reserved JS keyword so use `variable` instead**\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-var-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/ms535916.aspx)",
    "lineNumber": 2030,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "variable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "video",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~video",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{video}",
    "description": "[The `video` element](https://html.spec.whatwg.org/#the-video-element)\nis used for playing videos or movies, and audio files with captions.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-video-element)\n• [mdn api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)\n• [msdn ref](https://msdn.microsoft.com/en-us/library/hh772959.aspx)",
    "lineNumber": 2056,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "video"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.src",
        "description": "Address of the resource"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.crossOrigin",
        "description": "How the element handles crossorigin requests"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.poster",
        "description": "Poster frame to show prior to video playback"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.preload",
        "description": "Hints how much buffering the media resource will likely need"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.autoplay",
        "description": "Hint that the media resource can be started automatically when the page is loaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.playsInline",
        "description": "Encourage the user agent to display video content within the element's playback area"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.loop",
        "description": "Whether to loop the media resource"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.muted",
        "description": "Whether to mute the media resource by default"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "init.controls",
        "description": "Show user agent controls"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.width",
        "description": "Horizontal dimension"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "init.height",
        "description": "Vertical dimension"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLVideoElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "wbr",
    "memberof": "lib/htmldom.js",
    "longname": "lib/htmldom.js~wbr",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/htmldom.js",
    "importStyle": "{wbr}",
    "description": "[The `wbr` element](https://html.spec.whatwg.org/#the-wbr-element)\nrepresents a line break opportunity.\n\n[w3](https://www.w3.org/TR/html/single-page.html#the-wbr-element)\n• [mdn ref](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr)",
    "lineNumber": 2069,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "wbr"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}|String|Array|Node|DOMAssembler"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/htmldom.spec.js",
    "memberof": null,
    "longname": "lib/htmldom.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {\n    fieldset, legend, input,\n    header, nav, a, form, button,\n    label, select, option,\n    div, ul, ol, li, dl, dd, dt,\n    main, section, details, summary,\n    dfn, sup, sub, i, strong, p, variable,\n    htmldom, span\n} from './htmldom';\n\nimport chai from 'chai';\n\nconst { Node, HTMLSpanElement, HTMLAnchorElement } = window;\nconst { TEXT_NODE, ELEMENT_NODE } = Node;\nconst { assert } = chai;\n\ndescribe('HTMLDOM library', () => {\n    describe('Authorization fieldset', () => {\n        it('properly build form authorization fieldset', () => {\n            const element =\n                fieldset([\n                    legend('Authorization'),\n                    input({ type : 'email' }),\n                    input({ type : 'password' })\n                ]);\n            assert.equal(element.outerHTML,\n                '<fieldset>' +\n                    '<legend>Authorization</legend>' +\n                    '<input type=\"email\">' +\n                    '<input type=\"password\">' +\n                '</fieldset>');\n        });\n    });\n    describe('Header with navigation', () => {\n        it('properly build header with navigational links inside', () => {\n            const element =\n                header(nav([\n                    a({ href : '/lib.html', textContent : 'Library' }),\n                    a({ href : '/spec.html', textContent : 'Specifications' }),\n                    a({ href : '/home.html', textContent : 'Go home' })\n                ]));\n            assert.equal(element.outerHTML,\n                '<header><nav>' +\n                    '<a href=\"/lib.html\">Library</a>' +\n                    '<a href=\"/spec.html\">Specifications</a>' +\n                    '<a href=\"/home.html\">Go home</a>' +\n                '</nav></header>');\n        })\n    });\n    describe('Select box widget', () => {\n        let widget, selected;\n        const element =\n            label([\n                'Select technology ',\n                widget = select([\n                    option('DOM'),\n                    option('XML'),\n                    selected = option({ selected : true, textContent : 'HTML' }),\n                    option('SVG'),\n                    option('MathML'),\n                    option('WAI-ARIA')\n                ])\n            ]);\n        it('properly build label with select box option list inside', () => {\n            assert.equal(element.outerHTML,\n                '<label>' +\n                    'Select technology ' +\n                    '<select>' +\n                        '<option>DOM</option>' +\n                        '<option>XML</option>' +\n                        '<option>HTML</option>' +\n                        '<option>SVG</option>' +\n                        '<option>MathML</option>' +\n                        '<option>WAI-ARIA</option>' +\n                    '</select>' +\n                '</label>');\n        });\n        // victim of IE11 todo\n        it('proper selected option reference', () => {\n            assert.equal(widget.selectedOptions.length, 1);\n            assert.equal(widget.selectedOptions[0], selected);\n        });\n    });\n    describe('Search form', () => {\n        it('properly build form with search input and submit button inside', () => {\n            const element =\n                form({\n                    attrset : { role : 'search' },\n                    children : [\n                        input({ type : 'search' }),\n                        button('Search')\n                    ]\n                });\n            assert.equal(element.outerHTML,\n                '<form role=\"search\">' +\n                    '<input type=\"search\">' +\n                    '<button>Search</button>' +\n                '</form>');\n        });\n    });\n    describe('Checkboxes', () => {\n        let simple, checked, indeterminate;\n        const element =\n            div([\n                simple = input({ type : 'checkbox' }),\n                checked = input({ type : 'checkbox', checked : true }),\n                indeterminate = input({ type : 'checkbox', indeterminate : true })\n            ]);\n        it('proper HTML rendered', () => {\n            assert.equal(element.outerHTML,\n                '<div>' +\n                    '<input type=\"checkbox\">' +\n                    '<input type=\"checkbox\">' +\n                    '<input type=\"checkbox\">' +\n                '</div>');\n        });\n        it('check current state of widgets', () => {\n            assert(!simple.checked);\n            assert(checked.checked);\n            assert(indeterminate.indeterminate);\n        });\n        it('proper initial state assignment', () => {\n            const sample = input({ type : 'checkbox', attrset : { checked : '' } });\n            const container = div({ innerHTML : '<input type=checkbox checked>' });\n            assert(sample.isEqualNode(container.firstChild));\n        });\n    });\n    describe('Various list examples', () => {\n        it('properly build ul + li', () => {\n            assert.equal(\n                ul([\n                    li('Ampeg'),\n                    li('Fender'),\n                    li('Warwick')\n                ]).outerHTML,\n                '<ul>' +\n                    '<li>Ampeg</li>' +\n                    '<li>Fender</li>' +\n                    '<li>Warwick</li>' +\n                '</ul>'\n            );\n        });\n        it('properly build ol + li', () => {\n            assert.equal(\n                ol([\n                    li('Moscow'),\n                    li('Amsterdam'),\n                    li('New York')\n                ]).outerHTML,\n                '<ol>' +\n                    '<li>Moscow</li>' +\n                    '<li>Amsterdam</li>' +\n                    '<li>New York</li>' +\n                '</ol>'\n            );\n        });\n        it('properly build dl + dt + dd', () => {\n            assert.equal(\n                dl([\n                    dt('DOM'),\n                    dd('Document object model'),\n                    dt('XML'),\n                    dd('Extensible markup language'),\n                    dt('HTML'),\n                    dd('Hyper text markup language')\n                ]).outerHTML,\n                '<dl>' +\n                    '<dt>DOM</dt>' +\n                    '<dd>Document object model</dd>' +\n                    '<dt>XML</dt>' +\n                    '<dd>Extensible markup language</dd>' +\n                    '<dt>HTML</dt>' +\n                    '<dd>Hyper text markup language</dd>' +\n                '</dl>'\n            );\n        });\n    });\n    describe('Details with summary', () => {\n        it('properly build widget', () => {\n            const element =\n                details([\n                    summary('Show details'),\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, ',\n                    'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n                ]);\n            assert.equal(element.outerHTML,\n                '<details>' +\n                    '<summary>Show details</summary>' +\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, ' +\n                    'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.' +\n                '</details>');\n        });\n    });\n    describe('Other', () => {\n        it('property build DOM fragment', () => {\n            const element =\n                main([\n                    section(dfn('Instance.js — simple and powerfull DOM Element interface')),\n                    section(p([\n                        variable('var'),\n                        ' — is reserved JavaScript keyword, ',\n                        'so we use `variable` function name instead.'\n                    ])),\n                    section([\n                        sup('supertext'),\n                        sub('subtext'),\n                        i('alternative voice'),\n                        strong('important!')\n                    ])\n                ]);\n            assert.equal(element.outerHTML,\n                '<main>' +\n                    '<section><dfn>' +\n                        'Instance.js — simple and powerfull DOM Element interface' +\n                    '</dfn></section>' +\n                    '<section><p>' +\n                        '<var>var</var>' +\n                        ' — is reserved JavaScript keyword, ' +\n                        'so we use `variable` function name instead.' +\n                    '</p></section>' +\n                    '<section>' +\n                        '<sup>supertext</sup>' +\n                        '<sub>subtext</sub>' +\n                        '<i>alternative voice</i>' +\n                        '<strong>important!</strong>' +\n                    '</section>' +\n                '</main>')\n        });\n        it('htmldom, span', () => {\n            const node1 = htmldom('span', {\n                id : '00101',\n                className :'fa fi fu',\n                tabIndex : 0,\n                children : ['a', span('a b'), 'b']\n            });\n            const node2 = span({\n                id : '00101',\n                className :'fa fi fu',\n                tabIndex : 0,\n                children : ['a', span('a b'), 'b']\n            });\n            [node1, node2].forEach(node => {\n                assert.equal(node.nodeType, ELEMENT_NODE);\n                assert.equal(node.tagName, 'SPAN');\n                assert.equal(node.constructor, HTMLSpanElement);\n                assert.equal(node.attributes.length, 3);\n                assert.equal(node.id, '00101');\n                assert.equal(node.className, 'fa fi fu');\n                assert.equal(node.tabIndex, 0);\n                assert.equal(node.children.length, 1);\n                assert.equal(node.childNodes.length, 3);\n                assert.equal(node.childNodes[0].nodeType, TEXT_NODE);\n                assert.equal(node.childNodes[1].constructor, HTMLSpanElement);\n                assert.equal(node.childNodes[2].textContent, 'b');\n            });\n            assert(node1.isEqualNode(node2), 'htmldom() and span() work differently');\n        });\n        it('a', () => {\n            const node = a({\n                href : 'html://www.aria.dom/math.svg',\n                rel : 'next',\n                title : 'om dom dom dom d',\n                textContent : 'DOM module'\n            });\n            assert.equal(node.tagName, 'A');\n            assert.equal(node.constructor, HTMLAnchorElement);\n            assert.equal(node.href, 'html://www.aria.dom/math.svg');\n            assert.equal(node.rel, 'next');\n            assert.equal(node.title, 'om dom dom dom d');\n            assert.equal(node.textContent, 'DOM module');\n        });\n    });\n});\n"
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Node",
    "memberof": "lib/htmldom.spec.js",
    "longname": "lib/htmldom.spec.js~Node",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TEXT_NODE",
    "memberof": "lib/htmldom.spec.js",
    "longname": "lib/htmldom.spec.js~TEXT_NODE",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/htmldom.spec.js",
    "longname": "lib/htmldom.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/htmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/index.js",
    "memberof": null,
    "longname": "lib/index.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\n * @module htmlmodule\n *\n * Elements in the DOM represent things; that is, they have intrinsic meaning, also known as semantics.\n */\nexport * from './nodeinit';\nexport * from './domassembler';\nexport * from './htmlassembler';\nexport * from './xmldom';\nexport * from './htmldom';\n"
  },
  {
    "__docId__": 151,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/index.spec.js",
    "memberof": null,
    "longname": "lib/index.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import './nodeinit.spec';\nimport './domassembler.spec';\nimport './htmlassembler.spec';\nimport './xmldom.spec';\nimport './htmldom.spec';\n"
  },
  {
    "__docId__": 152,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/nodeinit.js",
    "memberof": null,
    "longname": "lib/nodeinit.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "/**\n * Converts any non-dictionary object argument to a `NodeInit` dictionary object\n * with a `children` property assigned to the passed object\n * @function NodeInit\n * @param {*|{}} [init] Various init types\n * @return {{children:*}|initial} `NodeInit` dictionary object\n */\nexport function NodeInit(init) {\n    if(init && init.constructor !== Object) {\n        return { children : init };\n    }\n    return init;\n}\n"
  },
  {
    "__docId__": 153,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "NodeInit",
    "memberof": "lib/nodeinit.js",
    "longname": "lib/nodeinit.js~NodeInit",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/nodeinit.js",
    "importStyle": "{NodeInit}",
    "description": "Converts any non-dictionary object argument to a `NodeInit` dictionary object\nwith a `children` property assigned to the passed object",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "NodeInit"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*",
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "Various init types"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{children:*}|initial"
      ],
      "spread": false,
      "description": "`NodeInit` dictionary object"
    },
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/nodeinit.spec.js",
    "memberof": null,
    "longname": "lib/nodeinit.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { NodeInit } from './nodeinit';\nimport chai from 'chai';\n\nconst { assert } = chai;\nconst { document, JSON } = window;\n\ndescribe('Node init', function() {\n    const init = { id : 'random-id' };\n    it('return the same object', () => {\n        assert.equal(NodeInit(init), init);\n    });\n    it('properly strigified to JSON', () => {\n        assert.equal(JSON.stringify(NodeInit(init)), '{\"id\":\"random-id\"}');\n    });\n    it('properly assign string as children', () => {\n        const string = 'string as textContent';\n        const init = NodeInit(string);\n        assert.equal(init.children, string);\n    });\n    it('properly assign array as children', () => {\n        const children = ['a', 'b', 'c'];\n        const init = NodeInit(children);\n        assert.equal(init.children, children);\n    });\n    it('properly assign element as children', () => {\n        const child = document.createElement('a');\n        const init = NodeInit(child);\n        assert.equal(init.children, child);\n    });\n    it('passes through undefined', () => {\n        const init = NodeInit(undefined);\n        assert.equal(init, undefined);\n    });\n});\n"
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/nodeinit.spec.js",
    "longname": "lib/nodeinit.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/nodeinit.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "document",
    "memberof": "lib/nodeinit.spec.js",
    "longname": "lib/nodeinit.spec.js~document",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/nodeinit.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/window.htmlmodule.js",
    "memberof": null,
    "longname": "lib/window.htmlmodule.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import '../shim';\nimport * as htmlmodule from './index';\n\nwindow.htmlmodule = htmlmodule;\n"
  },
  {
    "__docId__": 158,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/window.htmlmodule.spec.js",
    "memberof": null,
    "longname": "lib/window.htmlmodule.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "// todo\n\nimport './window.htmlmodule';\nimport chai from 'chai';\n\nconst { assert } = chai;\nconst {\n    htmlmodule : { a, span, div, article, input, fieldset },\n    HTMLAnchorElement,\n    HTMLSpanElement,\n    HTMLDivElement,\n    HTMLElement,\n    HTMLInputElement,\n    HTMLFieldSetElement\n} = window;\n\ndescribe('window.htmlmodule', function() {\n    it('module contains element assemblers', () => {\n        assert(a() instanceof HTMLAnchorElement, 'the a element works wrongly');\n        assert(span() instanceof HTMLSpanElement, 'the a element works wrongly');\n        assert(div() instanceof HTMLDivElement, 'the a element works wrongly');\n        assert(article() instanceof HTMLElement, 'the a element works wrongly');\n        assert(input() instanceof HTMLInputElement, 'the a element works wrongly');\n        assert(fieldset() instanceof HTMLFieldSetElement, 'the a element works wrongly');\n    });\n});\n"
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/window.htmlmodule.spec.js",
    "longname": "lib/window.htmlmodule.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/window.htmlmodule.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "htmlmodule",
    "memberof": "lib/window.htmlmodule.spec.js",
    "longname": "lib/window.htmlmodule.spec.js~htmlmodule",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/window.htmlmodule.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/xmldom.js",
    "memberof": null,
    "longname": "lib/xmldom.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { DOMAssembler } from './domassembler';\n\nconst { document } = window;\n\nconst assembler = new DOMAssembler;\n\n/**\n * Assembles the specified `Element` DOM node\n *\n * Provides the `Element` interface\n *\n * - [W3 specification](https://www.w3.org/TR/xml/#element-element)\n * - [MDN HTML reference](https://developer.mozilla.org/en-US/docs/Web/XML/Element)\n * - [MSDN API reference](https://msdn.microsoft.com/en-us/library/hh869681.aspx)\n *\n * @function xmldom\n * @param {String} tagName `Element` tag name\n * @param {{}} [init] `NodeInit` dictionary\n * @param {{}} [init.attrset] `Element` attributes set as dictionary object\n * @param {String|Node|DOMAssembler|Array} [init.children] `Element` child nodes\n * @param {String} [init.className] `Element` class name; reflects \"class\" attribute\n * @param {String} [init.id] `Element` unique identifier; reflects \"id\" content attribute\n * @param {String} [init.textContent] Paste string data as a single text node\n * @return {Element}\n */\nexport function xmldom(tagName, init) {\n    return assembler.createElement(tagName, init);\n}\n\n/**\n * Assembles a generic \"element\" instance of the `Element` DOM interface.\n * @param {{}} [init] `NodeInit` dictionary\n * @returns {Element}\n */\nexport function element(init) { return xmldom('element', init) }\n\n/**\n * Creates a `Text` DOM node.\n * @param {String} data Node data\n * @returns {Text}\n */\nexport function text(data) { return document.createTextNode(data) }\n\n/**\n * Creates a `Comment` DOM node.\n * @param {String} data Node data\n * @returns {Comment}\n */\nexport function comment(data) { return document.createComment(data) }\n"
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "document",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~document",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assembler",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~assembler",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "lib/domassembler.js~DOMAssembler"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "xmldom",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~xmldom",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": "{xmldom}",
    "description": "Assembles the specified `Element` DOM node\n\nProvides the `Element` interface\n\n- [W3 specification](https://www.w3.org/TR/xml/#element-element)\n- [MDN HTML reference](https://developer.mozilla.org/en-US/docs/Web/XML/Element)\n- [MSDN API reference](https://msdn.microsoft.com/en-us/library/hh869681.aspx)",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "xmldom"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": "`Element` tag name"
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init.attrset",
        "description": "`Element` attributes set as dictionary object"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "DOMAssembler",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "init.children",
        "description": "`Element` child nodes"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.className",
        "description": "`Element` class name; reflects \"class\" attribute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.id",
        "description": "`Element` unique identifier; reflects \"id\" content attribute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "init.textContent",
        "description": "Paste string data as a single text node"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "element",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~element",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": "{element}",
    "description": "Assembles a generic \"element\" instance of the `Element` DOM interface.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": true,
        "name": "init",
        "description": "`NodeInit` dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "text",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~text",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": "{text}",
    "description": "Creates a `Text` DOM node.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Text}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Node data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Text"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "comment",
    "memberof": "lib/xmldom.js",
    "longname": "lib/xmldom.js~comment",
    "access": null,
    "export": true,
    "importPath": "htmlmodule/lib/xmldom.js",
    "importStyle": "{comment}",
    "description": "Creates a `Comment` DOM node.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Comment}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Node data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Comment"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/xmldom.spec.js",
    "memberof": null,
    "longname": "lib/xmldom.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { xmldom, element, text, comment } from './index';\n\nimport chai from 'chai';\n\nconst { assert } = chai;\nconst {\n    Node,\n    Element,\n    Text,\n    Comment,\n    XMLSerializer\n} = window;\nconst { ELEMENT_NODE, TEXT_NODE, COMMENT_NODE } = Node;\n\nconst serializer = new XMLSerializer;\n\ndescribe('XMLDOM library', () => {\n    describe('dom', () => {\n        it('xmldom', () => {\n            const node = xmldom('pipi7', {\n                attrset : { g : '+++', j : '---', w : '!!!' }\n            });\n            assert.equal(node.nodeType, ELEMENT_NODE);\n            assert.equal(node.tagName, 'pipi7');\n            assert.equal(node.constructor, Element);\n            assert.equal(node.getAttribute('g'), '+++');\n            assert.equal(node.getAttribute('j'), '---');\n            assert.equal(node.getAttribute('w'), '!!!');\n        });\n        it('element', () => {\n            const node = element('bafi4');\n            assert.equal(node.nodeType, ELEMENT_NODE);\n            assert.equal(node.tagName, 'element');\n            assert.equal(node.constructor, Element);\n        });\n        it('text', () => {\n            const node = text('cuce31');\n            assert.equal(node.nodeType, TEXT_NODE);\n            assert.equal(node.constructor, Text);\n            assert.equal(serializer.serializeToString(node), 'cuce31');\n        });\n        it('comment', () => {\n            const node = comment('tuty5');\n            assert.equal(node.nodeType, COMMENT_NODE);\n            assert.equal(node.constructor, Comment);\n            assert.equal(serializer.serializeToString(node), '<!--tuty5-->');\n        });\n    });\n    describe('try use html semantics', () => {\n        it('xmldom span', () => {\n            const node = xmldom('span', {\n                id : '00101',\n                className :'fa fi fu',\n                tabIndex : 0,\n                children : ['a', comment('a b'), 'b']\n            });\n\n            assert.equal(node.nodeType, ELEMENT_NODE);\n            assert.equal(node.tagName, 'span');\n            assert.equal(node.constructor, Element);\n            assert.equal(node.attributes.length, 2);\n            assert.equal(node.id, '00101');\n            assert.equal(node.className, 'fa fi fu');\n            assert.equal(node.tabIndex, undefined);\n            // assert.equal(node.children.length, 0);\n            assert.equal(node.childNodes.length, 3);\n            assert.equal(node.childNodes[0].nodeType, TEXT_NODE);\n            assert.equal(node.childNodes[1].constructor, Comment);\n            assert.equal(node.childNodes[2].textContent, 'b');\n        });\n        it('xmldom a', () => {\n            const node = xmldom('a', {\n                href : 'html://www.aria.dom/math.svg',\n                rel : 'next',\n                title : 'om dom dom dom d',\n                textContent : 'DOM module'\n            });\n            assert.equal(node.tagName, 'a');\n            assert.equal(node.constructor, Element);\n            assert.equal(node.href, undefined);\n            assert.equal(node.rel, undefined);\n            assert.equal(node.title, undefined);\n            assert.equal(node.textContent, 'DOM module');\n        });\n    });\n});\n"
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/xmldom.spec.js",
    "longname": "lib/xmldom.spec.js~assert",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Node",
    "memberof": "lib/xmldom.spec.js",
    "longname": "lib/xmldom.spec.js~Node",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ELEMENT_NODE",
    "memberof": "lib/xmldom.spec.js",
    "longname": "lib/xmldom.spec.js~ELEMENT_NODE",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "serializer",
    "memberof": "lib/xmldom.spec.js",
    "longname": "lib/xmldom.spec.js~serializer",
    "access": null,
    "export": false,
    "importPath": "htmlmodule/lib/xmldom.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "XMLSerializer"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 225,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 227,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 228,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 229,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]